import random
import json
# Lista de razas disponibles para los personajes
razasOrigen = ["humano", "gigante", "gyojin", "triton", "minks", "tonttata", "lunarian", "bucanero", "tres ojos"]
# Diccionario para almacenar la información del personaje
personaje = {}
# Lista de posibles zonas de nacimiento
zonaNacimiento=[]
# Lista para almacenar las partidas
partidas = []
# Diccionario que representa una partida individual con su información
partida = {"id":None, "personaje": None, "arcos": None}
# Diccionario con los jefes (bosses) del juego y sus estadísticas
# Cada jefe tiene una lista con valores: [HP, Ataque, Defensa, Velocidad]
bosses = {
    "Alvida": [120, 12, 8, 10],
    "Morgan": [150, 15, 15, 8],
    "Buggy": [130, 14, 12, 12],
    "Arlong": [180, 20, 18, 14],
    "Don Krieg": [170, 18, 20, 10],
    "Smoker": [200, 22, 22, 18],
    "Crocodile": [300, 30, 25, 20],
    "Enel": [280, 35, 20, 25],
    "Rob Lucci": [520, 45, 30, 30],
    "Doflamingo": [600, 60, 75, 35],
    "Kaido": [1000, 100, 100, 20]
}
# Lista con los arcos de la historia, cada uno tiene:
# [Nombre del arco, jefe final del arco, probabilidad de aparición del arco]
arcos = [
    ["Romance Dawn", "Alvida", 5],
    ["Shells Town", "Morgan", 5],
    ["Orange Town", "Buggy", 6],
    ["Isla Conomi", "Arlong", 6],
    ["Baratie", "Don Krieg", 5],
    ["Loguetown", "Smoker", 5],
    ["Alabasta", "Crocodile", 7],
    ["Skypiea", "Enel", 6],
    ["Water 7", "Rob Lucci", 7],
    ["Dressrosa", "Doflamingo", 7],
    ["Wano", "Kaido", 8],
]
# Lista con distintas frutas del demonio
frutas = ["Gomu Gomu no Mi", "Mera Mera no Mi", "Hie Hie no Mi", "Pika Pika no Mi", "Zushi Zushi no Mi", "Mochi Mochi no Mi", "Bari Bari no Mi", "Soru Soru no Mi", "Tori Tori no Mi: Modelo Fénix"]
# Función para crear un personaje
def crearPersonaje():
    # Se solicita al usuario ingresar el nombre del personaje
    nombre = input("Introduce el nombre de tu personaje: ")
    personaje["nombre"] = nombre
    # Se elige aleatoriamente una raza con diferentes probabilidades
    raza = random.choices(razasOrigen, weights = [80,5,3,2,3,2,1,2,2], k =1)[0]
    personaje["raza"] = raza
    # Según la raza se asignan atributos específicos
    # Se generan estadísticas aleatorias dentro de un rango específico
    if raza == "humano":
        personaje["arte"] = r"""
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠤⠄⠀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡠⢈⠔⠀⠀⠀⠀⠀⡈⣦⡶⢖⠠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠎⡬⠥⠀⠀⠀⠀⠀⠠⣸⣭⣝⡳⢌⢌⢢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢰⣨⣤⣴⣶⡶⣶⣶⣿⣭⣟⣰⢺⡌⠊⣢⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡸⠽⣟⣣⡭⠭⣵⡿⣬⣍⣉⡛⠻⢿⡹⡢⡀⠈⢆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⢔⡆⠵⢂⣿⣿⡯⡇⠀⠙⢷⡙⡎⡿⣿⣿⡘⣃⣹⢓⣶⣦⡁⠢⢄⣤⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠴⣽⢩⢅⣊⣏⣿⠇⠹⢰⢄⠈⡔⠬⢲⣿⣿⢓⣠⢲⣖⠿⠋⠻⡢⢀⠉⠻⣿⣷⡄⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠚⢿⡄⢩⡁⠨⠤⠨⡄⣵⡿⠒⠋⠉⠁⠀⠀⠀⠸⢿⣦⡉⢵⣦⣽⢿⣄⡀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠆⢄⡂⢀⡠⣾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠠⢾⠿⣟⣦⣿⣿⣻⡾⣷
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡄⠀⠘⠧⢐⢻⣠⣀⠀⢀⣀⡀⠀⠀⢀⣀⣠⡼⣿⢿⣻⣿⣟⣿⠋
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⣿⣿⠃⢡⡀⠀⠀⣜⣈⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⠿⠛⠉⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢰⣿⢿⡿⣯⡏⠀⠀⠃⠆⢿⠏⠉⢸⣿⢿⡿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠉⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⣿⡾⣽⢯⣿⢿⣾⡀⠀⠀⠸⠁⠀⢰⢼⣿⢯⣿⣿⣷⣿⡿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢘⣱⡿⣽⣻⢾⣿⢻⣵⡙⠆⡀⡠⢌⢯⣿⢯⣿⣷⣿⡾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣟⡷⣯⢿⣟⣯⣟⡡⣖⠛⢳⡩⢣⣿⢯⣟⣿⣿⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣻⣿⡾⣿⢯⣟⣎⣽⡣⢺⠲⢉⠣⡙⣺⣿⣻⣞⣷⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⢿⣽⣿⣿⣿⣞⡷⣻⣦⢁⣀⣼⢄⡉⢾⣳⣟⡾⣽⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣻⡿⣾⣿⢿⣻⢾⣳⣿⡎⠁⠀⢨⠀⠀⠈⣾⣽⣟⡷⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣟⡿⣽⡇⣿⣽⣯⡷⣿⣡⢀⠤⣶⡄⣀⣀⣘⢷⢯⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣽⣟⡿⢠⣙⢮⡷⣷⢿⣷⠏⠀⠆⠀⠀⠻⡀⢻⡺⣽⣷⣿⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣼⣷⣯⣿⢣⢶⣿⣿⣷⠉⣽⠜⠂⠀⡇⠀⠀⠀⢇⠈⠁⣿⣿⣿⣻⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⢿⢏⣾⣽⣿⣲⡿⣿⠟⣋⡌⠃⠀⠀⠀⠀⠀⠀⠀⡘⠀⠀⡿⣿⣳⣿⣽⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢼⣾⣿⣿⠏⣿⣿⢽⣿⡛⠒⠣⠦⠄⠤⠤⠀⠀⠀⠀⠈⡂⡏⡝⡅⢹⣿⡷⣿⡿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⡏⠛⠜⣻⣿⣿⣇⡀⠤⠀⢀⣒⠒⠶⡢⠄⢂⣩⠔⡇⡇⣡⡇⠈⣾⣿⡿⣿⣟⣿⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠇⠀⢰⠿⣽⣿⠟⣀⡈⢡⡄⠆⠂⢁⠤⣂⠁⠤⠄⢶⠃⢱⡅⠄⢸⣿⣽⣿⠚⠛⠁⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⡌⠀⠿⢿⡡⢄⣀⣠⡤⠒⠉⠤⠥⠬⠭⢍⡙⠯⢎⠂⠷⠈⡄⠟⠻⠿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠇⠀⠣⡀⠀⢠⢿⣻⠟⣿⢻⡟⣿⣿⢶⣶⣾⣿⣿⣿⣟⣶⡈⠑⠌⢌⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢸⠀⢀⡘⠄⠁⡿⣎⠿⣭⣻⣽⣻⣻⢮⣿⣛⣿⣽⢮⡝⣮⣛⣦⣌⠢⡪⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣇⡾⠄⠘⣽⠝⣛⡷⣭⢳⣏⡶⣷⢯⣻⣎⣿⣻⣿⡾⣷⡝⣶⡹⣖⢿⣷⣮⣯⡢⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⠮⠖⠊⢠⣼⢻⡜⣧⢾⡹⣎⣷⣿⣿⣿⣶⣯⣷⣧⣛⢶⡹⢞⡮⣽⣇⢕⠈⠓⢄⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣄⣯⢳⡝⣞⡼⢳⡽⣿⣿⣿⣿⣿⣿⢿⣷⢻⢮⡝⣧⢻⡴⣻⠣⠡⡐⢄⠑⢄⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣸⢧⡻⣜⢧⡻⣽⢻⡿⣽⣿⠀⣿⣽⣛⢾⣫⢞⡹⣜⢧⡳⣭⡆⢃⠑⡀⢃⠈⠑⠄⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡆⣟⢮⡳⣝⢮⡝⣮⢟⣽⣿⡏⠀⢹⢶⣫⢻⣜⡏⣷⡹⣎⢷⢣⢷⢸⠀⣣⠈⢪⢂⠈⢆⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⢹⢮⡳⣝⢮⡳⣝⢞⣺⣾⣿⡇⠀⠘⣧⢏⣷⢫⡞⣥⡳⣝⢮⣛⢾⣸⠰⠀⢃⡀⢂⠄⠈⠆⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡌⣾⢣⡟⣼⢣⣟⣬⢟⣼⣿⣿⠀⠀⠀⣿⡮⣽⣣⢟⣶⡹⣎⠷⣭⢯⡏⠸⣀⠸⢀⠁⣚⡄⠚⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠑⣿⡳⣝⢮⡳⣞⢧⣻⣿⣿⡇⠀⠀⠀⠸⢱⣏⣏⢯⢶⣻⣭⣛⠶⣻⡅⠒⠠⠬⢠⢣⠀⡏⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠜⠟⠿⢪⠗⠽⠯⢻⣿⣿⢿⠁⠀⠀⠀⠀⠧⢾⣿⠸⠿⡟⠷⠯⠻⠿⠓⠄⠄⠐⠁⢸⠔⠁⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⡇⠀⣦⠀⠀⠀⠀⠀⠀⠀⠰⡀⣈⣆⠀⠀⢠⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⢨⣀⢸⡆⠀⠀⠈⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⡶⣼⣤⡰⣜⠀⢀⢀⡀⢛⢟⢫⣿⠀⠀⠀⢷⣸⣇⠀⡀⡸⣄⢀⣀⡛⢘⣛⣤⠃⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡯⠙⢟⡛⢻⠟⠿⠿⠛⠋⠀⠀⠀⠀⠀⠛⠋⠛⠻⣟⠿⠟⡋⢻⡋⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢨⠰⠀⠀⠁⡘⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⠂⠀⠀⢩⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡎⠆⠀⠀⢨⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢷⠀⠀⠀⡎⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠃⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
"""
        personaje["hp"] = random.randint(80,120)
        personaje["atq"] = random.randint(10,20)
        personaje["def"] = random.randint(10,20)
        personaje["vel"] = random.randint(10,20)
        personaje["esperanzaVida"] = random.randint(70,100)
        # Lista de posibles zonas de nacimiento
        zonaNacimiento = ["East Blue", "West Blue", "North Blue", "South Blue", "Grand Line", "Red Line"]
        # Se asigna una zona de nacimiento aleatoria
        personaje["nacimiento"] = islaNacimiento()
    elif raza == "gigante":
        personaje["arte"] = r"""
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⢒⣲⢤⣀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠷⠘⡙⣿⢸⢸⣷⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢘⣇⣧⣯⡬⡷⢝⡴⣇⢔⣀⡀⢀⢀⣤⡠⣶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⢻⣡⡿⠟⣹⣯⣱⣿⣧⣮⣿⣿⣿⣿⣷⣷⣤⣠⣤⣠⣶⣶⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣽⣿⠸⣧⠟⣯⣭⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣥⣦⡠⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢵⣫⢭⢖⠿⡑⢹⣿⡿⣽⡉⡁⠆⣩⢙⠛⠿⢿⣿⣿⣿⣿⣿⣿⣿⣶⣧⣆⡄⢀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠶⣾⣿⢣⣽⢷⡾⢴⣿⡟⠿⣷⣄⡑⠄⡊⠝⢴⡅⠦⠭⠿⢯⣍⢛⠛⢿⣿⣿⣿⣿⣽⣷⣠⡤⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣮⣿⢃⠚⣇⣿⣥⣾⣿⡇⢂⠌⣹⠷⡚⢢⢘⠤⢶⡀⠆⠡⢂⠜⡡⠎⡐⠨⢻⣿⣿⣿⣿⣵⣏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠺⣟⣾⠗⡰⢊⢻⣿⣿⢿⢏⡡⠖⡋⠰⡀⠜⡀⠆⢨⠐⢠⠊⡁⢆⣂⠤⠑⡈⠔⡁⢻⣿⣿⣿⣿⣷⣦⣆⡄⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢤⣞⣏⣙⣴⢏⠰⢈⣦⢉⡰⢊⠌⡐⠄⢃⠰⢈⠔⣈⠂⠜⣀⢂⣿⣿⢿⠿⣶⡈⡐⠡⠌⣿⣿⣿⣿⣿⣿⣿⢿⠷⢄⣄⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠶⠊⡅⢲⠏⠰⣀⠣⠍⣹⣢⣵⠈⡐⠰⢈⠂⡅⢊⡐⠠⢊⡐⢄⣾⣿⣻⠁⢂⠰⠐⣥⡘⣠⣿⣿⣿⣿⣿⣿⣿⣿⣪⠆⠁⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢐⠎⢡⠘⢠⢁⡘⢐⡀⠆⡑⢠⢹⠅⣂⠑⣈⠂⣁⠂⢆⢠⣃⣂⣴⣿⣿⣿⣻⣌⢂⡑⢨⠘⢿⡾⢈⠻⣿⣿⣿⣿⣿⣿⣯⣂⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡌⢂⠜⣸⠄⡐⢂⡐⢂⡘⢠⣾⣷⣶⣾⣤⣶⣶⢿⡶⣿⢿⣿⡿⠋⡉⣿⡿⡏⢡⠐⣂⠘⢠⠂⣁⢊⠘⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢷⣁⢂⣺⣦⡁⢖⣒⢠⣶⣿⣿⠻⠟⠳⠿⢷⣯⣿⡿⠛⡉⠡⢄⠑⣰⣿⣿⣇⢂⠒⢠⠘⣄⠒⠠⢂⠒⡘⣿⣿⣿⣿⣿⣿⣿⣿⣷⣠⡄
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢨⡷⠰⠟⣻⡏⡙⢛⠛⣿⠋⣀⠢⢁⢊⠰⠀⡄⡉⠍⠳⠔⡁⢢⣸⣿⣿⣷⣿⣄⠌⢂⠌⣿⡈⠡⢂⠌⡐⣿⣿⣿⣿⡿⠿⡦⠀⣀⣀⣀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⠄⢃⣼⣿⣷⠈⠤⠹⡁⠒⣠⣿⣿⣶⣤⣃⡐⠌⡐⠡⣲⣾⣾⠿⠋⢸⣯⣷⣿⣮⣠⣸⣿⣄⡑⡈⠰⢠⣿⣿⣿⣿⣿⣥⡈⠈⠁⠐⠂
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⡁⢂⣿⡎⣿⣮⡠⢉⠰⢡⡿⢋⡤⠠⠌⠩⠙⡒⠓⣻⡛⠉⢄⡐⣨⣿⣿⠿⡿⣽⣿⣿⣷⣶⣷⣾⣥⣆⡌⣻⣿⣿⣿⣿⣦⣄⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣄⣜⣐⣂⠻⢠⢘⣿⣷⡄⢷⣃⠔⡈⣷⣶⣌⠡⡁⣖⠥⠐⣳⣍⡄⣉⠛⢻⣽⣴⣾⣿⠿⠛⠉⠉⠉⠙⠛⠿⣿⣷⣿⣿⣿⣿⣖⡉⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣽⠿⠿⠿⠿⣿⣿⣷⣮⣿⣿⣧⢸⡌⠓⡘⢋⣙⠩⣉⠙⠄⠢⢑⠨⢻⡛⢠⣼⣾⡿⡿⡟⠀⠀⢀⣀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣮⣿⢯⡠⠀⠀
⠀⠀⠀⠀⠀⠀⢀⢀⢠⣄⢀⠝⢠⠃⠀⠀⠀⠀⠀⠉⢻⣿⣷⡷⣿⠠⠑⠨⢤⡿⠿⣦⡌⢌⡵⠈⠤⢁⠚⣀⣺⣿⣿⣿⣶⣿⣿⣿⣿⣿⣿⣿⣷⣦⣿⣿⣿⣿⣿⡗⠿⠀⠀⠀⠀
⠀⠀⠀⠀⣀⣼⣿⣿⣿⣿⣧⣴⣷⣶⣶⣦⣤⣄⡀⠀⢸⣿⣿⡿⣿⣔⣉⠓⠎⢂⢣⡐⠄⡊⢄⣡⣪⣴⣿⣿⣿⣿⣿⣿⣿⡿⠿⠿⠿⠿⣿⣿⣿⣿⣿⣿⣷⣿⡿⡇⠀⠀⠀⠀⠀
⠀⠀⣰⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣾⣿⣿⣭⣿⣿⣿⣿⣿⡿⠛⠍⠙⠋⢻⣿⣿⣿⣿⣿⣿⣿⡿⠉⠀⠀⠀⠀⠀⠀⠀⠈⢹⣿⣿⣿⣿⣿⠻⠀⠀⠀⠀⠀⠀
⠀⡠⣾⣿⣿⣿⡿⣽⡿⠛⡿⠉⠉⠉⠙⠛⠻⠿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣷⣁⣤⣤⣰⣾⣿⣿⣿⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀
⠀⣷⣿⣿⣿⣿⣽⡳⠀⣀⠁⠀⠀⠀⠀⠀⠀⠀⢨⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣴⣾⣿⡛⢿⣿⣿⣶⣦⣖⣾⣿⣯⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀
⢠⠽⣿⣿⣿⣿⣾⣧⣶⣷⠾⣶⣶⣦⣤⣀⡀⠀⣼⣿⣿⣿⣿⣿⣿⣳⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⣾⣿⣿⣿⣿⣿⣿⣦⣽⣿⣿⣿⣯⣷⣿⣿⠝⠀⠀⠀⠀⠀⠀
⠈⠿⣿⣿⣿⣻⣿⣶⣿⣿⣾⣿⣿⣧⣭⣿⡿⢷⣿⣿⠿⣿⡿⠻⣷⢿⣿⣿⣿⣿⣻⣿⣿⣿⣿⣿⣿⣟⣿⣿⣿⣿⣿⡿⣟⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠈⣝⣿⣿⣿⣿⡿⠛⠉⢉⠉⠙⢻⣿⣿⣿⣿⣿⢃⠰⢀⠱⢠⢹⣿⣿⣿⣿⣯⣷⠻⣻⣿⢿⣿⡿⣞⣿⠋⣘⠟⠁⠀⠨⠝⠳⣹⣾⢻⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠈⢹⣿⣿⣿⡶⣿⣞⡶⣶⢄⠘⠉⠉⠛⠿⣁⠂⠆⣜⠴⢉⣼⡿⣯⣟⣿⠚⠀⠀⠁⠈⠈⣻⡿⣽⣧⡾⣿⠀⠀⡠⠍⠀⠀⠼⢫⢿⣺⣽⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠘⢿⠙⣻⣽⣾⣽⣾⣿⢦⣤⣄⡀⠣⢄⢘⠞⣁⣲⣾⢿⣽⣳⠟⠁⠀⠀⠀⠀⠀⠀⠈⢹⣿⣷⣿⣿⠀⡐⠌⠀⠀⠬⠁⢠⣿⣱⢯⣿⣿⠿⠯⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣿⣾⢯⡷⣯⢿⣽⣞⣿⣻⣽⣿⡐⠠⠊⣴⣿⣻⣽⡻⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢾⣿⣿⣷⡚⡌⠀⠀⠼⠁⢠⣟⢶⣟⢯⡍⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠻⣯⡿⣽⣿⣻⣞⡿⣾⣽⣿⢽⢷⣷⣿⣿⣯⢿⡽⣿⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⢿⣾⣿⣿⣾⣓⣬⡵⣶⣟⢮⢿⣝⢾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠉⠁⠘⠟⠿⢻⢷⡺⠛⠫⠚⢾⣿⣳⣿⢯⣟⡷⣟⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢽⢿⣿⣿⣿⣿⣿⣽⣾⣯⡿⠊⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣻⣷⣻⣿⣽⣻⡽⣿⡂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⠛⠛⢻⡍⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⣿⣷⣯⣷⣿⣿⣿⣣⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢐⣿⣾⣿⣠⣭⣾⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⣻⣿⣿⣿⣿⣿⠝⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣽⣿⣿⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢽⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⠫⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢾⣿⣿⡿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⢿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⡿⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⣟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣤⣶⣿⣿⣿⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣲⣿⣿⣿⣿⣿⡢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠺⠟⠿⠿⠛⠟⠿⠿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠟⠿⠿⠿⠿⠛⠿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
"""
        personaje["hp"] = random.randint(200,300)
        personaje["atq"] = random.randint(30,50)
        personaje["def"] = random.randint(40,60)
        personaje["vel"] = random.randint(5,10)
        personaje["esperanzaVida"] = random.randint(300,500)
        personaje["nacimiento"] = "Elbaf"
    elif raza == "gyojin":
        personaje["arte"] = r"""
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣶⣿⣶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣻⣻⣿⣤⣄⣤⣤⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⣧⣟⣿⣿⡿⠻⢿⣿⣿⣿⣶⣶⣦⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢀⣀⣀⣤⣤⣤⣤⣀⠀⣀⣿⠹⣞⠏⢡⠫⢿⣦⠀⣨⡟⢻⣿⣿⣿⣿⣿⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠲⠾⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡳⠓⡛⠓⠒⠋⠁⠔⣁⠴⣻⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠙⢻⣿⣿⣿⣿⣿⡟⠁⠀⠀⠿⠿⠂⠀⠀⠀⠘⣡⣾⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⣿⣿⣿⣿⣽⠁⠀⠀⠀⠀⠀⠀⠀⠀⡠⠺⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢸⡿⣏⣻⡏⠀⠀⠀⠀⠀⠀⠀⢀⠎⢀⢴⠇⡌⠉⡟⢻⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢦⣀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢸⣿⣇⡇⡇⣤⡠⠄⣦⡄⢀⠔⣅⣸⣗⣟⣴⠀⣆⣧⠃⠀⡒⠛⠛⠛⢻⠿⠿⣿⣿⣝⠻⣿⣿⣷⣬⣙⣦⡀⠀⠀
⠀⢀⣖⣦⡄⠀⣸⠖⡊⣿⣿⠔⣛⣛⢜⠝⠁⣠⢮⠿⡟⠁⡙⠀⠈⠚⡼⢢⢄⠉⠘⢲⣶⡿⠾⠽⠻⣿⣷⣽⣿⣿⣿⣿⣿⣷⣄⠀
⠀⢞⢎⡝⡫⢦⡟⣯⢸⢃⠉⡅⠀⣼⣏⡴⡚⠁⠁⡜⢠⠀⡇⠀⠀⠀⡞⣾⡞⠈⡠⠟⠁⠤⢤⣼⣶⠶⠾⠽⢿⣿⣿⣿⣿⣿⣿⡇
⠀⠹⢾⣔⣁⣿⣅⢿⢨⢿⠔⡷⠺⣿⠿⠛⠁⡠⢪⡀⢈⡇⣧⡇⠀⠀⠘⡹⡧⣰⡌⠀⠀⠉⠉⣀⣠⡔⢶⣽⣶⣾⣯⣿⣿⢿⣿⡇
⠀⠀⠀⠀⠈⢹⡹⣾⣿⡿⠊⣠⠞⡁⠀⠀⠀⠰⡬⣮⣾⣧⣗⢧⡞⠀⠀⡈⠪⣿⡱⣆⡶⣲⣹⠈⠀⠀⠈⢿⣿⣿⣿⣿⣿⣟⠟⠁
⠀⠀⠀⠀⠀⢸⣧⢠⡴⣅⣼⢳⣄⡁⣠⠆⠀⢀⠈⠉⠉⠋⠉⠀⠀⠀⢀⠸⡦⣿⣿⣿⣿⣷⣽⣧⡀⠀⠀⠈⢿⣿⣿⣿⢟⠎⠀⠀
⠀⠀⠀⠀⠀⡞⣷⣞⣰⣏⠘⠟⢾⣿⣞⠾⠚⢱⠀⠀⠀⡄⠀⠀⠀⠀⠈⠯⠾⢿⢿⣿⣿⣿⣿⣿⣿⠄⠀⠀⠈⢟⣯⣿⠁⠀⠀⠀
⠀⠀⠀⠀⠀⢿⣿⣿⣧⣬⣍⠁⠈⠀⠀⠀⠀⠈⢹⣍⢸⡟⣠⡴⢥⠔⠠⢀⠀⠀⡩⠛⠻⢿⣻⡿⢁⠀⠀⠀⢀⠀⢻⣿⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢀⣿⢿⣿⡶⢻⣯⣽⣭⣭⣍⣁⣹⣿⣿⣿⣽⣻⣥⡞⠀⣀⣀⣍⣵⣤⡶⣷⣿⣿⠇⠸⡷⣠⡤⢼⡦⣗⣿⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣾⣷⣻⣿⣿⣿⢿⣝⢟⣿⣿⣿⣛⠋⠩⣭⣭⣭⣭⡭⠝⢋⣉⣛⣻⣹⣭⣺⡿⠟⠳⡄⣣⢀⢁⣏⣞⣼⣿⠀⠀⠀⠀
⠀⠀⠀⠀⢰⣿⢟⣿⡟⣬⣿⣿⣿⢿⡏⠀⡠⠂⠉⠳⣦⣽⣿⢿⣷⣿⣷⡾⠁⠀⠠⣈⣦⡷⠀⠀⠉⠛⠛⠻⢿⣿⣿⡿⠀⠀⠀⠀
⠀⠀⠀⠀⣦⣋⠜⣿⢱⡟⣄⡿⣦⢺⡗⢒⡏⠀⠀⠀⠀⠉⠉⠉⠃⠀⠀⠀⠀⠀⠠⣽⣿⣿⣧⠀⠀⠀⠀⠀⠈⢿⣿⡇⠀⠀⠀⠀
⠀⠀⠀⢸⣿⠶⢶⣹⢾⣿⢸⢹⣿⣿⣯⣿⣗⣴⠤⠤⠄⢀⣀⡀⢀⣄⠀⠀⣠⠀⠀⠀⠉⠊⢠⠆⠀⠀⠀⠀⠀⠀⢻⠃⠀⠀⠀⠀
⠀⠀⠀⠸⣿⣏⠩⣉⠢⡯⡇⡞⣟⡭⣝⠛⠻⠥⠤⣤⣄⣐⣦⣤⡘⣌⣆⠔⡡⣀⡄⠀⠀⠈⠠⣼⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠘⣷⢬⡢⢕⢌⡢⡙⢗⡬⣉⡚⠥⠖⣤⡤⢀⣓⠾⠿⣿⢿⠻⠿⠿⠛⠠⠀⠠⣧⣤⣷⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢀⡹⣷⣝⠶⣅⡪⢻⣶⣌⣿⣿⠦⣤⣧⡀⠉⠉⠉⠛⠒⢂⡭⠥⢒⣒⣀⠤⠴⠪⣽⣿⡿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⣜⣒⣛⢳⣕⣌⠛⠳⠽⣿⡿⣿⣾⣿⣤⠇⠨⠁⠀⠀⠀⢠⢣⠀⠉⡰⠀⠈⠋⠵⢒⠾⣚⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠈⠉⠀⠉⠳⡢⣀⠀⠉⠚⠲⠿⣛⠚⠑⠠⠬⣷⣤⢸⡼⣴⣻⢃⣠⠀⢀⡀⠜⢀⠎⣸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⠫⢒⣲⡤⠤⠤⠤⠤⠼⣶⣾⡿⠿⠿⠿⢾⠟⢡⣄⣠⣤⣴⠿⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠀⠈⠉⠀⠀⠀⠀⠀⢠⣖⣒⠒⠒⠺⣶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢯⠼⡯⡯⡭⡯⡿⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠒⠚⠛⠿⠯⠭⠼⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
"""
        personaje["hp"] = random.randint(100,150)
        personaje["atq"] = random.randint(15,25)
        personaje["def"] = random.randint(15,25)
        personaje["vel"] = random.randint(15,25)
        personaje["esperanzaVida"] = random.randint(100,150)
        personaje["nacimiento"] = "Isla Gyojin"
    elif raza == "triton":
        personaje["arte"] = r"""
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡆⢰⠇⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡇⡞⢀⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡟⢨⠇⢸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⠀⢠⣶⢦⡀⣄⠀⠀⠀⠀⢀⣼⠏⠀⡾⠀⠘⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣮⡏⢻⣇⠀⡏⠻⣵⣱⡀⠀⠀⠸⢽⣄⣸⣇⣀⣼⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢿⢀⠰⡿⣽⡗⢀⣿⣿⠇⠀⠀⢠⣺⣿⣿⣿⢟⡋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢟⣿⣄⣧⡿⣧⣼⣿⠏⠀⢰⣟⣿⣞⣹⣿⢧⣟⣁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠈⢻⣿⣿⣷⣿⣿⣟⠀⡀⠈⢿⡿⢿⣿⣿⣿⣏⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣠⣿⣹⡿⣿⡟⢯⣻⠟⢯⡿⣿⢿⡤⣼⣿⣿⣿⠉⣡⠿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢠⣟⣍⣛⣦⠖⢛⣹⠟⣛⠛⣟⠛⡳⢯⡉⠉⠛⠻⣽⣿⣿⣯⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣠⣤⣤⣤⣷⠞⠋⠀⢰⡞⢄⠫⢄⡍⢂⠳⢰⡁⡛⣦⡀⠀⢸⢿⠿⣵⢟⣠⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢀⣸⣿⡯⣽⢿⠅⠀⠀⣸⠍⣆⢃⠚⡤⣘⠡⢣⡑⢢⠱⢬⢳⡄⡼⡏⠀⣌⢷⡷⣽⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠈⠻⣿⣿⣵⠟⠀⠀⠀⣿⢑⠚⣧⣩⠔⣤⣯⣴⡼⢦⣧⣾⣯⣧⣹⠃⠀⣹⣦⣝⣯⢻⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢼⡛⣿⣿⣷⠶⠃⠀⠀⠀⢹⡎⢿⣸⣟⢶⣤⣿⣴⣿⢿⣿⣿⣾⣿⡟⠀⠀⠈⠷⡷⣿⣿⣟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⣼⣿⣷⡛⠛⠁⠀⠀⠀⠀⠀⢻⣽⡷⣿⣽⡶⣟⢿⣿⣿⣻⣿⣿⢻⠁⢀⠀⠀⠀⠙⢻⣯⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⣾⣿⡏⠙⠃⠀⠀⢀⣴⠮⡉⢛⢍⢻⣻⣿⡾⠿⠽⠿⠿⣾⣿⠹⣾⡿⠴⠛⠀⠀⠀⠀⠈⠙⣱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠉⠻⣷⠀⠀⠀⠀⠘⣷⣾⡫⠝⠛⠉⠁⠀⠀⠀⠀⠀⠀⣹⡿⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢰⣷⣶⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⢾⢃⡤⠤⢤⡀⠀⠀⠀⠀⠀⠀⠀⠀
⣼⣦⡹⢿⣤⢭⣑⢦⣀⡀⠀⠀⣀⡄⢀⣀⣤⡶⣭⠽⣳⡶⣦⣀⡀⠀⠀⠀⠀⠠⡤⢴⣠⣴⣾⠻⡇⢳⢠⠆⠹⡄⠀⠀⠀⠀⠀⠀⠀
⢙⣿⣾⣧⣽⣳⣌⡛⠃⢷⣖⣷⢮⣟⠫⣭⣧⣿⣿⡛⣳⡼⣮⣬⡽⣗⢺⣾⣷⣲⣾⣿⣿⣾⠟⠀⢷⡇⢸⢠⠞⣹⠀⠀⢀⠀⠀⠀⠀
⠀⠙⢻⣿⡟⣿⣽⣿⣿⡲⣾⣞⠒⡋⣛⣶⣗⣫⡿⠷⢯⡵⡮⣿⣿⠹⡍⢉⣿⣿⣿⣿⡟⠁⠀⠀⣿⠇⡏⣏⡴⣿⣶⡟⢉⠉⠙⠢⡀
⠀⠀⠀⠀⠀⠙⢻⣿⣼⣷⣯⣿⡆⠀⠀⠀⠠⠀⠹⠀⠀⠀⣹⡯⠈⠀⢀⡿⣿⣿⣿⣿⠇⠀⠀⢰⣿⢸⠓⣾⡋⣣⠏⡰⠋⣠⠴⠂⡇
⠀⠀⠀⠀⠀⠀⠀⠸⢿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠰⠀⣿⠃⠀⢀⣾⣿⡞⠉⠛⠋⠀⠀⠀⣼⡟⣼⣾⣯⢡⠏⡼⢡⢞⢡⡶⠽⠷
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣟⡑⠦⣠⣀⣀⠀⠀⠀⢸⣟⣀⣠⠞⡏⠉⠀⠀⠀⠀⠀⠀⠀⣿⣧⢸⣿⢣⣟⡞⣱⣧⠟⠉⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣷⣆⡀⠀⡈⡉⠉⢉⣿⡇⣠⣴⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣼⣿⣿⣯⣾⠟⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣷⣾⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⢀⣴⣿⡿⡄⣿⣿⣿⣿⠿⠁⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⠃⠀⠀⠀⠀⠀⢠⡿⣿⡟⣴⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⡿⣿⣸⣿⣽⣿⠀⠀⠀⠀⠀⠀⣾⣿⣿⡽⣵⣿⢿⣿⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⣿⣿⣿⣿⣿⣿⡿⣽⣏⣿⣟⣿⣾⣧⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣯⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣟⣿⢹⣿⢯⣿⣿⣿⣷⣄⠀⠀⣼⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢠⣿⣻⡿⣿⣿⣿⣿⣿⣿⣿⢾⡟⣿⣟⣯⣿⣿⣿⣟⣝⣷⣿⣿⣿⣟⣯⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣾⣿⣳⣻⠟⠹⣿⣿⣿⣿⣿⣿⢻⣿⡽⣾⣽⣿⣽⡸⡎⢯⣿⣷⣻⣾⣿⣿⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢹⣧⠟⠉⠀⠀⠹⣿⣿⣿⣿⣿⣿⣿⣽⣟⣾⣻⣿⣷⣿⣠⣿⣿⣿⣿⡿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠁⠀⣀⡤⢤⣦⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣋⣿⣶⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠸⢿⣿⣿⣻⣿⠿⠛⣩⡏⠙⠻⠿⠿⠟⠛⠛⠛⠉⠻⢿⣯⣿⣷⣾⠿⠟⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡀⠀⠀⠀⠐⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
"""
        personaje["hp"] = random.randint(90,140)
        personaje["atq"] = random.randint(12,22)
        personaje["def"] = random.randint(12,22)
        personaje["vel"] = random.randint(15,25)
        personaje["esperanzaVida"] = random.randint(100,150)
        personaje["nacimiento"] = "Isla Gyojin"
    elif raza == "mink":
        personaje["arte"] = r"""
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣐⣀⣠⢻⠶⢺⡠⠛⠀⠛⠴⠚⠁⠀⡀⠀⠀⣿⢫⢥⣀⢠⢶⣶⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣀⡎⢾⢫⠈⠀⠀⠘⠃⢀⡀⠀⡇⠀⠀⠀⠘⢀⠜⠋⠈⢈⠽⠟⠸⢸⡄⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡜⣵⠏⠀⠘⠀⠀⠀⠀⢀⢀⠵⠔⠉⠀⠀⠀⠀⠀⠈⠤⣠⢆⠸⡀⣰⠀⡺⣅⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣇⠉⢀⢴⠐⠄⠀⠀⠠⡇⠁⠀⠀⡀⠀⠘⢅⠇⠀⠀⠀⠋⢰⠁⠉⠙⢀⠇⢨⡇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠇⠃⠄⠁⣁⠀⠀⠀⠐⠐⡄⡪⢹⠰⠜⡡⡄⠀⠀⠀⠀⠘⣠⢻⠂⡉⠀⢾⠁⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣇⠐⠀⠄⠀⠅⠁⠀⠀⢀⠦⢁⠕⣺⡼⣜⢺⠉⣠⠃⠀⠀⠀⠀⢸⡚⠀⢰⢬⡇⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⣿⡀⢷⠑⡈⠀⠀⠠⣑⠅⣋⡼⠓⠗⠼⣣⡙⠁⠦⡊⠀⠀⠀⠀⣧⣤⣮⡃⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⣿⡄⡕⠃⠀⠀⢰⠭⠀⡞⠿⠷⢶⡿⡛⣣⠀⡀⡇⠀⡀⡀⣜⢸⣿⣿⣿⣶⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣿⣿⣅⣈⢶⠊⡀⠃⢲⡞⣷⠾⠿⡿⡾⣗⠟⠢⡤⠂⡸⢆⣔⣽⣿⣿⣿⣿⣿⣇⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⣿⣿⣿⣿⡟⢹⢢⠑⠂⠆⣊⡀⢂⣉⡊⣌⠂⡀⣀⢇⠔⢹⠹⣿⣿⣿⡿⠋⠙⣿⣿⡄⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⠏⠉⣿⣿⡟⠻⡇⣎⡨⡍⣿⣤⣆⡁⠁⠀⢀⠄⢉⠈⣠⣃⢤⣈⡀⠟⢻⠹⠀⠀⠀⠙⣿⣷⣆⠀⠀⠀⠀
⠀⠀⠀⠀⢀⣠⣾⣿⣿⡿⡇⠀⠀⣿⡿⠀⠀⠓⠻⣤⠳⣽⣟⠿⠷⢢⣼⣷⣿⠾⢚⠝⣟⠍⠈⢀⠀⠘⣤⠀⠀⠀⠀⠈⣿⣿⣧⠀⠀⠀
⠀⠀⠀⢀⡛⠋⡵⡻⠟⠐⡻⢠⡗⡿⠃⠀⠀⠀⠸⣅⠀⠹⡻⠳⣢⠏⡿⢿⠱⠊⠁⢀⠎⠀⢀⠌⠀⠀⠈⠆⠀⢀⠀⠀⠘⡝⢪⣢⠀⠀
⠀⠀⠀⣦⢁⡞⠁⠀⠀⠠⠗⣽⣓⣷⠀⠀⠀⠀⠀⠈⢷⡀⠑⡄⠸⠔⠲⣈⠤⠃⡰⠃⣀⠔⠁⠀⠀⠀⠀⣰⣷⠘⢢⠗⠤⡰⡀⠹⡀⠀
⠀⠀⢐⡏⠟⠰⡀⠀⢠⢀⡞⡉⠽⠿⣧⠀⠀⠀⠀⠀⠀⠙⠣⡈⠢⡀⠀⠀⡠⢊⠴⠊⠁⠀⠀⠀⠀⢀⣼⠃⠘⣾⡆⠙⠀⠈⠡⠀⠰⡀
⠀⢀⡾⠁⠀⢀⡏⢆⢠⢻⣷⣷⠀⠀⠈⢳⡄⠀⠀⠀⠀⠀⠀⠈⠑⠊⡦⠞⠋⠁⠀⠀⠀⠀⠀⠀⢠⡾⠁⠀⢠⢄⡷⠀⠀⠀⠀⠀⠀⢣
⢶⡼⡀⠀⡅⠘⠃⠘⠀⢃⠿⢹⣤⡆⠀⠀⠹⣄⠀⠀⠀⠀⣀⣀⣤⣤⣷⣤⣀⣀⡀⠀⠀⠀⢀⡴⠃⠀⢀⣰⠋⢈⠊⠀⠔⠀⠀⠀⠀⢸
⢸⡗⠧⠀⢧⢀⠀⠀⠀⠈⠂⠈⡟⡇⠀⠀⢀⡼⠃⠀⠰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠆⠐⢯⠀⠀⠀⡎⠿⠦⠀⠀⠀⠀⠀⢨⢄⠠⠛
⠸⡍⢀⡆⠈⠣⣇⠀⠀⠀⠐⠁⠀⠼⠀⠀⢾⣁⠀⠀⠀⠀⠉⠉⢿⣿⣿⠿⠟⠋⠉⠀⠀⠀⢘⡇⠀⢸⡇⢡⠀⠀⠀⠀⢠⠀⠘⠸⣡⡇
⢶⣽⢄⡘⠇⠀⠀⢠⠀⠀⠀⠀⢸⣾⠀⣠⣾⣿⣿⣷⣦⣤⣀⣠⣼⣿⣿⣷⣠⣄⣤⣤⣶⣾⣿⣿⡶⣆⡇⠀⠁⡠⣤⣀⠆⠄⠀⠘⢸⠁
⠈⡏⠛⠈⠢⡀⠀⠀⡆⠀⠀⠀⠸⡇⣴⣿⣿⠿⠟⠛⠛⣿⣿⠿⣿⣿⣿⣿⣿⣿⡿⠛⠉⠉⠛⠿⣇⠈⠁⠀⠐⠘⠀⠀⠀⠀⠄⠀⡇⠀
⣸⠱⡀⠀⠀⡌⠀⠇⡟⠤⢄⠀⠀⢿⠉⢉⠀⠀⣀⠴⠞⠁⠀⠀⠀⠀⠀⠀⠉⠙⠛⠲⠤⣀⣠⠞⠊⠀⠀⠀⠀⠀⠀⠀⠀⠐⠢⡸⠃⠀
⠙⢷⡚⠂⠀⠇⠘⡴⠀⠀⠈⠂⠀⠈⡆⡘⠓⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡏⢠⢁⠀⠀⠀⠀⠀⠀⠀⠀⢆⠢⣣⠁⠀⠀
⠀⠰⠃⠀⠐⢜⢄⠈⠣⠀⠀⠀⠀⢰⠃⡄⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⣈⢸⢆⠀⠀⠀⠀⠀⢀⠀⠀⣷⠋⠀⠀⠀
⠀⠘⣆⠀⠢⢀⠀⠀⠀⠀⠀⠀⠀⡎⣠⠓⠀⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠷⠬⣦⣀⣀⣠⠔⣡⣴⡼⠋⠀⠀⠀⠀
⠀⠀⠀⠙⠒⢦⠑⣠⣦⡀⠀⣰⠖⠛⠉⣆⣈⡯⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡟⡦⢼⡇⠉⠉⢉⣉⣁⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⠛⠋⠉⠉⢛⢁⣀⢀⣼⠓⣸⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢦⣀⠙⢦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠹⣟⣥⠶⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
"""
        personaje["hp"] = random.randint(100,160)
        personaje["atq"] = random.randint(18,28)
        personaje["def"] = random.randint(12,22)
        personaje["vel"] = random.randint(25,35)
        personaje["esperanzaVida"] = random.randint(90,140)
        personaje["nacimiento"] = "Zou"
    elif raza == "tonttata":
        personaje["arte"] = r"""
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢀⡔⣊⡡⣐⣒⣺⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⡎⠸⣳⢋⢿⣷⡿⣢⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠑⠳⢧⣝⢩⠳⣇⠘⣉⡂⠀⠀⢀⠤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠘⢧⢢⢣⠪⠫⢙⡵⣄⢀⡎⠀⠙⢶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢧⠣⠃⢉⠷⠘⡼⣾⠀⠀⠀⠘⣧⠀⠀⠀⣠⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⣠⣤⣄⡀⠀⠀⠀⠈⢧⢠⣻⣷⣄⠈⠇⠀⠀⠀⠀⠸⣇⢀⣼⣿⣿⣿⡄⣠⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠹⣆⠈⠙⠶⣤⡀⠀⢈⣧⣿⣿⣿⣶⠀⠀⠀⠀⠀⠀⠹⣾⣿⣿⣿⣿⠋⠁⠈⢻⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠘⢧⠀⠀⠈⠙⠳⢾⣻⣿⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⠟⠁⠀⠰⣜⡄⢻⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠈⢃⠀⠊⠐⠀⠀⠈⠛⢿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠉⠁⠀⠀⠀⠀⠨⣻⣄⠹⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠈⢆⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠋⠳⡙⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠘⡤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢀⢦⡆⠀⠀⠈⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣷⠋⠀⠀⠀⢀⡤⣒⣒⣒⠠⡀⠀⠀⡠⣪⣽⣯⣕⢆⠀⠀⢫⣾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⠀⠀⠀⡜⣼⢻⣿⣿⣷⢱⠒⡒⢳⡏⡾⣽⢿⡏⡀⠀⠀⣾⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣯⡢⠀⣠⢧⡻⣮⣈⣡⣟⣼⠛⠋⢧⣻⠦⠴⢟⡜⠙⠦⣌⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢺⣧⠊⢀⣠⠿⠶⠟⠒⠛⠁⠀⠀⠀⠈⠙⠛⠉⢿⣤⠀⠨⣏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⡼⠫⣶⡿⠹⢀⣀⠀⠀⠀⣀⠀⠀⠀⠀⠀⢀⠔⠘⣹⡷⣦⣬⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢸⣵⡾⣝⠇⡆⠀⡙⢳⡤⣀⣨⠇⣾⢦⢤⠺⠧⢡⠀⡇⡇⣿⠎⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣰⣟⣾⣶⣹⡀⢱⢠⣷⠬⠵⠃⠀⠠⠞⠃⠈⠓⠒⠛⢢⠣⡻⢳⡗⣱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣠⣷⣣⣧⡂⠱⣧⣌⢦⠀⠀⠀⢠⣯⣵⣶⣾⡄⢀⣀⣠⡎⣵⢱⣯⢺⢧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⢀⡔⠙⠘⡊⠉⠉⣉⣿⣆⢈⡆⢳⣶⣶⣜⣭⣭⣭⣵⣽⣿⣿⣻⡷⣝⣿⣵⣜⡒⢻⢦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⢠⠏⠀⣠⣛⣛⣛⡲⢚⠿⣻⠽⠷⠟⠉⡍⡿⢿⣿⣿⣿⢿⣿⠿⢯⣿⣿⣻⣦⢿⣟⡄⠹⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⡗⠁⠐⠉⠴⠌⠗⣜⡴⠕⠉⢀⢤⠶⣻⢡⢱⠅⠘⣻⣟⠀⠸⡼⣸⣔⣞⠛⣉⣿⣞⢿⡼⣄⣿⡇⠀⣀⢤⣖⣖⠒⠶⣤⡀⠀⠀
⠸⢻⡼⢄⢢⢄⣤⡜⢸⣇⣠⢾⣕⢁⣤⠋⡛⡌⠐⢲⣿⣿⣏⠉⡇⢣⠹⡝⣿⣿⣿⣿⡦⡷⣿⡿⣿⡟⠋⠁⢉⠁⠀⠀⠀⠙⢦⠀
⢇⢏⠻⣢⣩⣞⣻⠃⡇⢨⠋⡁⠘⣿⡃⢠⢃⠃⢠⠿⢻⣿⣿⡆⢸⣈⣆⣹⣾⣿⣿⣿⣿⣷⣿⣾⣿⣵⢀⠀⠀⠁⠀⠀⠀⠀⠈⣇
⠸⡿⣗⠾⣽⡖⢺⡀⡇⡟⢹⠥⠦⡎⡼⡫⢭⢫⠚⢿⣾⣿⣿⢛⢋⠖⢲⢻⣿⡿⣿⣿⣿⣿⣿⣾⣿⣧⣮⣶⣄⠀⠀⠀⠀⠀⠀⢹
⠀⠘⣵⢍⠒⠩⠽⣿⣇⢗⡑⠥⢴⣟⣧⡧⠴⣼⠤⠀⢻⡿⠧⠄⠯⣕⣯⣯⣿⠇⠹⣿⣿⣿⣿⣿⣿⣿⣯⣿⣿⠀⠀⠀⡀⠀⡀⢸
⠀⠀⠈⠳⣭⣓⠒⢿⣿⣿⣶⣧⣈⢆⠈⠛⠛⠁⠤⠤⠄⠁⠒⠒⠒⠉⢁⡠⠃⠀⠀⠘⢿⣿⣿⣿⣿⣿⣿⡟⠁⠀⠠⣔⣁⠲⣂⠏
⠀⠀⠀⠀⠈⠳⢯⣽⣿⣿⣿⣿⣿⣶⣯⣶⢰⣲⣤⣤⣤⣤⣴⡶⢎⣇⢃⣀⠀⠀⠀⠀⠈⠻⢿⣿⣿⣿⣿⣷⡀⡰⣊⣙⣙⣿⠏⠀
⠀⠀⠀⠀⠀⠀⠀⠈⠛⠿⢿⣿⣿⣟⡎⠛⠋⣽⣿⣿⠿⠛⠉⠀⠸⡀⣀⡘⠀⠀⠀⠀⠀⠀⠀⠉⠙⠛⠛⠛⠛⠚⠛⠓⠉⠁⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⢹⠤⠕⡉⠀⠀⠀⠀⠀⠀⠀⡊⠀⠑⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠃⢠⠢⠃⠀⠀⠀⠀⠀⠀⠀⠓⠒⠒⠄⠚⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠑⠒⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
"""
        personaje["hp"] = random.randint(50,80)
        personaje["atq"] = random.randint(5,10)
        personaje["def"] = random.randint(5,10)
        personaje["vel"] = random.randint(40,50)
        personaje["esperanzaVida"] = random.randint(50,80)
        personaje["nacimiento"] = "Green Bit"
    elif raza == "lunarian":
        personaje["arte"] = r"""
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣷⣤⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡄⠄⢢⢷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⡷⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡧⢰⢌⠡⠑⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣠⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⣤⠡⣀⣅⣽⣤⣨⠺⠇⢄⣴⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣿⡄⠀⠀⠀⠀
⠀⠀⠀⠀⠀⣼⣿⣿⡿⣿⣿⣿⣿⡆⠀⠀⠀⠀⢠⠐⡾⣦⡼⠫⣿⣏⡹⣮⠳⠮⠇⡄⠀⣀⠀⠀⠀⣰⣿⣿⣿⣿⣯⣻⣿⣿⣆⠀⠀⠀
⠀⠀⠀⠀⣼⣿⣿⣿⣿⣿⣝⣿⣟⣯⡄⠀⠀⡄⡬⣦⣤⣾⣱⣷⣾⣿⣿⣧⠶⠒⠞⠷⢢⡌⠀⢀⣾⣿⣿⣿⣿⣿⣿⣟⣿⣿⣿⠄⠀⠀
⠀⠀⠀⢰⣿⣿⣿⣽⣿⣿⣿⣟⣿⣿⣿⣔⣈⠜⠀⠨⢀⡀⣿⡿⣿⢯⢿⣷⡄⠀⣉⢰⠈⢂⣴⣿⣿⣳⣿⣿⣿⣿⣿⣽⣿⣿⣿⣗⠀⠀
⠀⠀⠀⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣾⣄⣀⣴⣾⣾⣿⣾⣿⣿⣿⡟⣷⣄⣳⣳⣷⣿⣿⣿⣿⣿⣿⣿⣟⣿⣿⣿⣿⣿⣿⣿⡆⠀
⠀⠀⢸⣿⣿⣿⣿⣽⣿⣿⢿⣿⣟⣿⣿⣿⣿⣿⣿⣧⡟⢻⣧⣿⣯⣼⣿⣿⠟⣍⣽⣿⣿⣿⢿⣿⣿⣯⣿⣟⣽⣿⣿⣿⣽⣿⣿⣿⡇⠀
⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣯⣻⣾⣷⣿⣿⣛⣷⢿⠛⣻⣋⡚⣻⣿⣽⢿⠟⣧⣾⢉⠡⡻⣿⣿⣾⡵⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀
⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣽⣿⣯⡿⣟⣾⣿⣿⣨⣱⣵⣿⣳⣥⠸⠋⢄⣽⣿⣿⣿⣿⣶⣿⣿⣿⣻⣷⣳⣿⣿⣿⣟⣿⣟⣯⣿⣿⣿⡄
⠀⣾⣿⣿⣿⣿⣿⣾⣿⣿⢿⣾⣾⣿⣿⣿⣿⣿⣿⣾⣿⣷⣿⣿⣷⣶⣿⣿⣿⣛⣿⣿⣿⣿⣿⣟⣾⣿⣾⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⡇
⢠⣿⣿⣿⣿⡽⠟⣿⣿⣿⣿⣿⡿⡽⡿⡾⣿⣿⣿⣿⣿⣿⣿⣽⡾⣿⢻⡾⣿⣿⣿⣿⣿⣿⢯⣷⣿⣿⢿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷
⢸⣿⣿⣿⣿⣏⡖⠼⣿⣿⣿⣿⣿⢿⣿⣏⣿⣿⣿⣿⡿⣿⣿⣽⣾⣿⣾⣷⣿⣿⡿⣝⣿⢭⣿⣿⣿⣾⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣼⣿⣿⣿⣿⣿⣷⡗⣛⣿⢿⣻⣺⢿⣝⣾⣿⣏⣿⢟⣻⣇⣿⣟⣿⣧⣯⣿⣿⣻⣏⡿⢿⡯⢻⣿⣿⣿⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
⣿⣿⣿⣿⣿⣿⣿⣏⡼⡽⢷⣿⣽⣿⣿⣿⣿⣚⣿⣺⣻⣯⣿⣿⣿⣿⣯⣽⣿⣿⡻⣿⣿⣟⣿⣿⣷⣤⣿⣽⣿⣿⣿⣿⣿⣿⣿⣽⣿⣿
⣿⣿⣿⣯⣿⣾⣿⣿⣯⣽⣿⣳⡗⣙⣿⣿⣧⣯⣷⣿⢿⣶⣷⣿⣾⣷⣾⣿⡿⠛⢾⣿⣿⣕⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣽⣿⣿
⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣋⣾⢿⡿⢿⡻⠿⣯⣿⣿⣯⢠⣽⣿⣿⣿⣿⣿⣷⣤⣾⣿⣿⣷⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣽⣿⡟
⢸⣿⣿⣿⣻⣿⣿⣿⣿⣿⣽⡧⣷⡻⣯⠙⢸⣿⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⠟⠻⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇
⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⣁⠿⠣⢀⣲⣿⣿⣿⣿⢠⡸⣿⣿⣿⣿⣿⣿⣷⣶⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣾⣻⣨⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⣿⣿⣾⣿⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⠀
⠀⠈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣾⣿⣿⢿⣿⣿⣠⣬⣿⣿⣿⣿⣿⣿⣯⣴⣿⣿⣏⣿⣯⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀
⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣾⡗⣿⣿⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣼⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⠀
⠀⠀⠀⠹⣿⣿⣻⣿⣿⣿⡿⡿⣽⣿⣿⢿⣿⢏⣿⣿⣿⣫⣿⡿⣿⣿⣿⣿⡿⣟⢿⣿⣟⡿⢿⣏⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡋⠀⠀
⠀⠀⠀⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣸⣿⣿⣿⣿⣽⡿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢹⣿⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⠀⠀
⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣟⣻⣼⣿⢭⣻⣿⣿⡿⠝⣿⣿⣟⡣⣼⣻⣻⣿⣥⣿⣿⢋⣻⣮⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠀⠀⠀
⠀⠀⠀⠀⠀⠈⢻⣿⣿⣿⣿⣯⣾⣿⣷⣿⣞⣿⣿⣽⠾⣿⣽⣟⣷⡷⠛⢿⣯⡿⢯⣿⣿⣳⢿⣿⣿⣿⣽⣿⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠻⣿⣿⣿⣿⣿⣾⣿⣿⢾⣯⡝⠿⣿⡾⣿⣿⣿⣷⣷⣄⠙⢷⣻⢿⣟⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠹⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣷⣸⣿⣿⣿⣯⣿⣿⣿⣗⣄⠻⢟⣾⣿⣯⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠉⢸⣟⣿⣇⣳⣿⣿⣿⣽⣿⣿⣿⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⡿⠫⢍⡊⡝⢿⣿⣿⣿⣿⣿⠏⠀⠀⠀⣿⣿⣾⣶⣿⣿⢫⡴⠀⡖⠹⣿⣿⡿⠃⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⢂⠨⣿⡿⡠⢸⣿⣿⣿⢿⡟⠀⠀⠀⠀⠉⣿⣿⣿⣿⣇⠦⡸⠿⢃⢅⡝⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣦⣚⣐⣂⣴⣿⣿⣿⡿⠌⠁⠀⠀⠀⠀⠀⠈⣹⣿⣿⣷⣴⣵⣵⣼⣾⣷⣟⡞⠠⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣟⣿⣿⣿⣿⣿⣷⠉⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⢿⣿⣿⣿⣿⣿⣿⡿⠁⠣⡶⣀⠐⢤⡀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣻⣿⣿⣽⣽⣿⣿⣻⡝⠍⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⢯⣿⣿⣷⢿⣿⣿⡆⠀⠀⠘⢖⡟⡣⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣟⣿⣏⣾⣟⣿⢿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣿⣿⣾⣯⣾⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⡿⣿⣿⣷⣹⣿⢿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⣽⣿⢿⡆⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠰⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⢿⣿⣿⣿⣿⡂⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⢿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣷⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣻⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⣿⣿⡅⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⢿⣯⣿⣿⣧⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢀⣠⢴⣿⣿⣻⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣟⣼⠶⣞⣤⡀⠀⠀⠀⠀
⠀⠀⠠⣶⣶⣶⣿⣟⣞⣏⣿⣿⣿⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⢿⣿⣿⣿⣿⣿⣿⣷⣦⡀⠀
⠀⠀⠀⠙⠿⠿⠿⠿⠿⠓⠛⠁⠙⠛⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠛⠃⠻⠿⣿⣿⣿⣿⡿⠗⠀
"""
        personaje["hp"] = random.randint(180,250)
        personaje["atq"] = random.randint(40,60)
        personaje["def"] = random.randint(30,50)
        personaje["vel"] = random.randint(20,30)
        personaje["esperanzaVida"] = random.randint(150,250)
        personaje["nacimiento"] = "un recóndito lugar"
    elif raza == "bucanero":
        personaje["arte"] = r"""
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⠠⠤⡀⢀⡴⠆⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡾⡏⡙⢑⠠⠈⠨⠱⣶⡽⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢨⣯⡷⠶⣷⠒⣺⣿⣶⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢨⣿⡄⣉⡙⡉⢴⣿⣿⣿⣧⡀⣀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡨⠿⠭⠁⣀⣳⣋⣿⣿⣿⣿⣿⣿⣿⣗⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⡏⢡⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⡇⢸⠀⠀⣀⣿⣿⣿⣿⣿⣿⣿⢿⡿⡿⢿⠿⣿⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠋⡏⠈⠀⢸⣿⣿⣿⣿⣿⣿⣛⣯⢯⣱⣙⣦⢋⡜⠭⣛⠳⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢴⠿⡄⠂⠀⢲⣾⣿⣿⣿⣿⣿⣿⣟⣯⣏⡧⣏⣜⢣⢞⡱⣌⠳⡌⡜⡰⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⡇⢀⠡⠀⣠⣾⣿⣿⣿⣿⣿⣿⢿⣻⡽⣺⢵⣋⠾⣽⢮⣗⣮⢳⡜⡴⣱⡈⠦⡑⠦⣄⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⠉⠀⠁⠀⢐⣿⣿⣿⣿⣿⢿⣯⣟⣯⠷⣝⣧⢻⡜⣯⣟⡿⣾⣽⣿⣿⣽⣳⣽⣧⢷⣾⣷⣿⣶⣄⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣠⣿⣿⡿⠀⠐⠀⠀⠚⠛⠻⠿⣿⣿⣿⣾⣽⣞⣿⡽⣞⣧⣟⡷⣯⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⠀⠀
⠀⠀⠀⠀⠀⣠⣾⣿⠟⠉⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⣿⣾⣿⣾⣽⣟⣷⣿⣻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠀
⠀⠀⠀⢀⣴⣿⠟⠁⠀⠀⠀⠄⠀⢀⡀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀
⠀⠀⣴⣿⡿⠁⠀⣠⡆⠀⠸⠀⢀⠾⣿⣻⢦⣄⠀⠀⠀⠀⠀⠀⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀
⠀⢰⣿⡟⠀⢠⣾⣿⣶⡾⢋⣆⡡⣌⣤⣸⣜⣽⣷⣄⠀⠀⠀⠀⠀⠀⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⠀
⠀⠘⣿⠁⢠⣿⣿⣿⣿⢿⣞⡾⡙⢿⣿⣿⣿⣿⣿⣿⣦⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
⠀⠀⠇⠀⢺⣿⣿⣿⡿⣯⢿⢳⣙⢶⣫⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀
⠀⠀⢨⡀⠈⣿⣿⣿⣿⣿⡟⣿⣿⣾⣷⣿⣿⣿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠈⠛⠛⠛⠿⠿⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀
⠀⠀⢘⣽⡄⢹⣿⣿⣿⣿⣿⡟⠛⡿⢿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢉⠛⣿⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⠀
⠀⠀⠐⣿⡇⠈⣿⣿⣿⣿⣿⣏⢶⣩⠿⣽⣿⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠠⣹⣿⣿⣿⢯⣿⣿⣿⣿⣿⣿⡄
⠀⠀⠀⢸⣷⠀⠘⣿⣿⣿⣿⢻⣟⣾⣟⣿⣿⣿⣿⣿⣧⣤⡄⠀⠀⠀⠀⠀⣀⣀⡀⠀⠀⠀⠀⡀⠀⡐⣧⡿⠹⣿⣿⣽⣿⣿⣿⣿⣿⡇
⠀⠀⠀⣼⣯⣇⢸⣿⣿⣿⣿⡿⣿⣿⣾⢿⣾⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⢠⣿⣿⣿⣿⣿⣶⣶⣦⣰⡩⡼⠀⠀⢻⣿⣯⣿⣿⣿⣿⣟⡇
⠀⠀⠀⣿⣿⣿⠀⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⡿⠀⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠘⣿⣿⣿⣿⣿⣿⣿⡇
⠀⠀⠀⣿⣿⣿⡇⢹⣿⣿⠉⠉⡏⠉⠙⣿⣿⣿⠟⠋⠀⠀⠀⠀⠀⢠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠁⠀⠀⠀⠀⢿⣿⣿⣿⣿⣿⣿⡇
⠀⠀⢀⣿⣿⣿⣷⠀⠙⠻⠀⠀⢇⠀⠀⠟⠋⠁⠀⠀⠀⠀⠀⢀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠀⠀⠀⠀⠀⠀⣿⣿⢷⣿⣿⣿⣿⡇
⠀⠀⣸⡟⣿⣿⣿⡇⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⢀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠃⠀⠀⠀⠀⠀⠀⠀⣿⣿⠷⣿⣿⣿⣿⠁
⠀⠀⣿⠼⣱⣿⣿⡿⣄⠀⠀⠀⢰⠀⠀⠀⠀⠀⢀⣠⣴⡿⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣚⣽⣿⣿⣿⠀
⠀⠀⣿⢧⣿⣿⣿⠶⡟⣳⡆⠀⠈⡀⠀⠠⠶⠾⢿⠉⣿⠷⠚⠛⢿⣨⣿⣟⣹⠿⣾⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⡼⣿⣿⣿⡿⠀
⠀⠀⣿⣻⣿⣿⣿⠀⢸⣿⡇⠀⢸⠄⠠⢾⣿⣿⣿⡟⠀⠀⠀⠀⠀⢻⣿⣿⣇⡵⣞⡎⠀⠀⠀⢀⠀⡤⡄⢀⡀⠀⠀⣿⡼⣿⣿⣿⡇⠀
⠀⠀⣿⢹⣿⣿⡧⠀⣠⣿⡗⠀⢈⠂⠀⠸⣿⣭⣭⡅⠀⠀⠀⠀⠀⢢⣿⣿⣯⡼⣣⡇⠀⠀⡄⠀⠀⣇⢵⣞⢧⡿⣷⣿⣳⣿⣿⣿⡀⠀
⠀⢠⣿⣾⣿⣿⠀⣄⣿⣿⡇⠀⠈⡆⠀⢸⠿⠿⢟⡿⣦⣀⣀⣀⣤⣾⣿⣿⣿⣶⣭⣇⠀⠀⣷⠀⠀⢛⡠⢙⣳⠘⣿⣿⣷⣻⣿⣿⠄⠀
⠀⢀⡯⢿⣿⡏⠈⠙⠛⠻⠧⠤⠤⠤⠤⠼⠾⠶⠷⠿⠿⠿⠿⠟⠛⠻⢛⠿⣻⢿⡛⠉⠀⠀⢹⠀⠀⠈⣝⡿⣣⣗⣿⡿⢝⣯⣿⡇⠀⠀
⠀⠶⣭⠻⣿⣿⠀⠀⠐⠀⠀⣂⡄⠀⡀⠀⠀⠦⢀⡀⡀⠠⠀⠀⠀⠀⠀⢎⡱⢯⡇⠀⠀⠀⢸⠀⠀⢀⢗⣛⡗⣿⠧⣾⡹⢶⢯⡇⠀⠀
⢸⡿⣫⢇⣿⣿⡄⠘⠀⠀⠀⠀⠁⠏⡍⡠⠠⢒⠻⢱⣾⡀⠀⠀⠀⠀⠀⢊⡜⣣⡇⠀⠀⠀⠀⠀⠀⢸⠻⢭⣿⡇⣞⣿⣝⣯⢿⣅⠀⠀
⠈⠙⠚⠿⠿⠟⠁⠀⠓⠀⠀⠀⠀⠀⠀⠛⣉⡲⣽⠛⠵⠀⠀⠀⠀⠀⠀⡰⠨⡕⡇⠀⠀⠀⢰⡀⠀⠘⣵⡛⢾⢲⣞⣿⣟⣾⢯⣿⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠘⠀⠀⠀⠠⠴⠚⠉⢁⠾⠁⠀⠈⢀⠀⠀⠂⠒⣬⢡⣱⠘⣅⠀⠀⠀⠀⠑⠒⠛⢮⢿⣿⣿⣿⣿⣿⣿⡿⠟⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢁⠨⠆⣭⡂⠄⣠⢋⠃⠀⠀⠀⠀⠨⢄⠀⠀⠁⠀⠠⣉⢾⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠛⠛⠛⠛⠉⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⢆⡛⠀⠀⠀⠀⠀⠀⠙⠄⠀⠀⠀⠀⢆⢿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀

"""
        personaje["hp"] = random.randint(150,200)
        personaje["atq"] = random.randint(25,35)
        personaje["def"] = random.randint(25,35)
        personaje["vel"] = random.randint(15,25)
        personaje["esperanzaVida"] = random.randint(100,200)
        personaje["nacimiento"] = "un recóndito lugar"
    elif raza == "tres ojos":
        personaje["arte"] = r"""
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⡀⠀⠀⢀⣀⣤⣶⡶⣶⣶⣶⣶⣶⡶⣤⣄⣀⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡶⢟⣻⣿⣿⣿⣷⢾⣛⣛⡛⠚⠛⠝⠛⠛⠞⡥⠭⢗⣮⣽⣿⣿⣳⣦⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⠏⣴⣿⣿⣿⣿⠛⠉⠉⢀⣀⣉⣤⡾⢣⣴⠄⣦⢲⣚⠢⢌⡙⢿⣿⣿⣿⣷⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣿⢏⣸⣿⣿⣿⣿⠒⠭⠭⠭⢟⣯⡾⢉⢠⠟⢸⢸⡿⣧⡨⡳⣄⠙⣦⡉⢫⢻⣿⡄⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡏⡼⣿⣿⣿⢿⡿⡣⣀⣀⢠⣾⡟⡰⢣⠏⢠⢧⣿⠃⣸⣷⣷⡌⠳⡜⢗⡄⢣⢿⣇⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⠁⣷⣿⣿⣿⡘⡜⢌⠓⣊⣿⣾⢷⢡⠏⢠⣿⣿⠏⠀⠟⠛⠟⡿⣦⡘⡌⡾⡈⡾⣿⡀
⠀⠀⠀⠀⠀⠀⠀⠀⣠⣿⡿⢸⢸⣿⣿⡟⣧⠈⠲⠭⣽⣻⡝⣇⡏⣰⣷⣿⡇⠀⣠⣶⣿⣿⣷⣞⣳⣼⡼⣇⢣⣿⡇
⠀⠀⠀⠀⠀⠀⠀⣼⣿⣿⡇⠸⢸⣿⡿⣷⠙⣷⣄⡠⢉⣇⢿⣿⣼⣿⣿⣿⡇⠺⣟⢹⡿⢿⣏⡿⠀⢻⣷⣿⢸⣿⡁
⠀⠀⠀⠀⠀⠀⣼⢯⣿⣿⣷⠀⡞⣹⣷⠻⣧⡈⠓⠯⣿⣿⢸⣿⡟⠮⣍⡉⠁⠀⠀⠉⠉⠉⠁⠀⠀⣠⣿⣿⣯⡿⠀
⠀⠀⠀⠀⠀⢰⡿⣼⡟⣿⡿⡀⢣⡏⣿⣧⡑⡽⣫⣷⣾⣿⣿⡏⣠⣶⣾⣿⣿⣿⡶⠀⠀⠀⣠⣶⡿⣿⢿⣿⣿⣇⠀
⠀⠀⠀⠀⠀⢸⡇⡏⡇⢹⣷⢱⡈⣵⠸⣿⣝⡇⢿⣿⡟⣿⣿⣿⣿⣻⡿⠿⡿⣙⢁⠀⣀⢴⡻⣽⣛⣿⣫⣿⣿⡟⠀
⠀⠀⠀⠀⠀⠸⣧⣧⢳⠈⡟⣧⠳⡘⢇⠹⡽⣷⡸⣝⠧⣿⢻⣷⣄⠙⠛⠛⠉⠀⡎⠀⣀⠬⣽⢀⢼⣿⣿⣿⣿⠀⠀
⠀⠀⠀⠀⠀⠀⢿⣸⠘⡆⠸⡘⣷⣜⢮⢦⢻⣿⣿⣷⣦⣼⣾⢮⡊⠓⢦⠀⠀⠀⠈⠉⢤⠔⠋⢩⣸⣿⣿⣿⣿⡀⠀
⠀⠀⠀⠀⠀⠀⠘⣷⣇⠘⡄⢣⢹⢻⣷⣷⣣⣿⣿⣿⣿⣿⣿⣿⣿⣁⠏⠀⠢⣴⣖⣲⣖⡶⠂⣰⣿⡿⣿⣿⣿⣷⠀
⠀⠀⠀⠀⠀⠀⢀⣿⡿⣦⠘⢆⢣⢟⣾⣻⣧⣿⣿⣿⣿⡿⢿⣿⠻⣷⢤⣀⠀⠈⠻⠿⠟⣁⣼⣿⣏⣼⣿⡞⣆⢿⠀
⠀⠀⠀⠀⢀⣴⣿⣿⣿⣏⢷⢄⡳⣿⢿⣧⢿⢸⣿⣿⠋⢠⣿⠸⣯⢮⡛⢾⣯⣷⣶⣶⠺⣿⣿⣣⣿⣿⢏⣮⢮⡎⠀
⠀⠀⠀⢠⣾⣿⣿⣿⣯⢿⣞⢎⠹⣮⡿⣿⣿⡾⣿⠁⠀⢁⡇⠀⡘⢷⠑⢄⡙⠻⢿⡿⠀⠀⠈⡟⡟⠷⣿⣷⣿⢇⠀
⠀⠀⠀⣼⢿⢹⢹⠘⣿⡞⡿⡿⣷⣜⢿⡜⣟⣹⡇⠀⠀⢸⡇⠀⠙⠌⠳⠀⠙⠢⣼⢸⡇⠀⠀⢧⣧⣀⣠⡬⡝⣺⣦
⠀⠀⣠⣿⡟⡌⢏⢆⠈⢿⣞⢮⡳⣭⣻⣷⣿⡏⢀⡀⠀⠘⣧⠀⠀⠀⠀⠀⠀⠠⢌⣿⡇⠀⢀⣴⣾⣿⠛⠾⣴⡏⠀
⢀⣾⡿⣟⡾⡱⣌⢪⡳⣄⣽⠟⠉⠁⠘⡿⣿⣾⣿⣯⠑⣄⠹⡦⠀⠀⠀⠀⠀⠀⠀⢹⣵⢠⣿⣿⣿⣿⡇⠀⠈⣧⠀
⡜⡏⡇⢻⣘⣕⡌⠳⣽⠞⣷⣾⣿⠄⡑⣻⢯⢿⣿⣿⣧⢮⢧⢻⡚⠦⣄⣄⡀⠀⣴⠏⢯⢺⢟⣿⣿⣯⢀⡆⠀⡟⠀
⡆⢇⢧⠀⠹⡈⢮⡢⣿⣼⣿⠟⠙⠀⠘⣽⠘⡎⢿⣿⣿⣆⠉⢧⢳⡀⠀⠁⠓⠀⠀⠀⠈⢿⠟⢿⣿⣿⣸⠀⢠⡇⠀
⠘⣾⣄⠳⣄⠈⢮⢿⡟⠿⠇⢐⠆⠀⠀⠀⠀⠁⠈⣿⣿⣿⣆⠈⢧⠻⡄⠀⠀⠀⠀⠀⠀⠈⣇⠈⢾⣿⣿⠀⢸⠇⠀
⠀⠈⣿⣷⢬⣳⣦⣻⠃⠀⠀⢏⢳⡀⠀⣤⠀⠀⠀⠘⣿⣿⣿⡄⠈⢳⣝⣦⡀⠀⠲⣄⠀⠀⠸⡆⠀⢿⣿⢧⡟⠀⠀
⠀⠀⠈⢿⣷⡝⣿⣿⠀⠀⠀⠀⠀⢳⠀⡟⠀⠠⠒⠀⠘⣿⣿⣿⡄⠀⠀⠉⠻⣆⠀⠙⡆⠀⠀⢻⠀⠸⣿⡄⢳⡀⠀
⠀⠀⠀⠀⠙⢿⣮⡿⠀⠀⠀⠀⢀⠀⢿⠁⠀⠀⠀⠀⠀⠸⣿⣿⣿⡀⠀⠀⠀⠈⢣⡀⠘⡄⠀⢸⡄⠀⣿⣧⠀⢷⠀
⠀⠀⠀⣀⡀⢀⣿⡇⠀⠀⠀⠀⠈⢣⡘⡆⠀⠀⠀⠀⠀⠀⢹⣿⣿⣧⠀⠀⠀⠀⠀⢳⠀⢱⠀⢸⠃⠀⣿⣿⠀⠸⡇
⠀⠀⠀⣿⣿⠟⣿⠀⠀⠀⠀⠀⠀⠀⢳⣷⠀⠀⠀⠀⠀⠀⠀⢿⠀⠘⡆⠀⠀⠀⠀⠈⣇⠘⡆⣼⠀⠀⡿⢹⠇⠀⡇
⠀⠀⠀⠈⣿⣿⠃⠀⠀⠀⠀⠀⠀⢦⡀⢹⡄⠀⠀⠀⠀⠀⠀⠘⡄⠀⢱⠀⠀⠀⠀⠀⢸⢀⣷⠇⠀⠀⡇⢸⠀⢠⠁
⠀⠀⠀⠀⣼⡏⠀⠀⠀⠀⠀⠀⠀⠀⢳⡀⢷⠘⠀⠀⠀⠀⠀⠀⢳⣶⣮⡆⠀⠀⠀⠀⢸⣼⠏⠀⠀⢸⠁⡜⢀⠎⠀
⠀⠀⢀⣼⠋⠳⢄⠀⠀⠀⠀⠀⠀⠀⠀⢧⡘⣷⣦⠤⠀⠀⠀⠀⢸⣿⣿⣧⠀⠀⠀⠀⠘⠁⠠⠤⣠⠃⢰⣵⠏⠀⠀
"""
        personaje["hp"] = random.randint(90,130)
        personaje["atq"] = random.randint(12,22)
        personaje["def"] = random.randint(12,22)
        personaje["vel"] = random.randint(10,20)
        personaje["esperanzaVida"] = random.randint(100,150)
        personaje["nacimiento"] = "Totto Land"

def islaNacimiento():
    # Función que determina la isla de nacimiento de un personaje dentro del universo de One Piece.
    # Dependiendo de la zona asignada aleatoriamente, el personaje recibe ciertos bonus en sus atributos.
    zonaNacimiento = ["East Blue", "West Blue", "North Blue", "South Blue", "Grand Line", "Red Line"]
    zona = random.choices(zonaNacimiento,weights = [20,20,15,15,25,5], k =1)[0]
    if zona == "East Blue":
        isla = random.choice(["Isla Dawn", "Shells Town", "Isla Orange", "Isla Conomi", "Baratie", "Isla Gecko", "Loguetown"])
        personaje["hp"] += personaje["hp"]*0.05    
    elif zona == "West Blue":
        isla = random.choice(["Ohara", "Isla Pucci", "Isla Ilusia", "Isla de la Mafia"])
        personaje["def"] += personaje["def"]*0.05
    elif zona == "North Blue":
        isla = random.choice(["Flevance", "Spider Miles", "Isla Swallow", "Lvneel", "Fiora"])
        personaje["atq"] += personaje["atq"]*0.05
    elif zona == "South Blue":
        isla = random.choice(["Baterilla", "Isla de la Armada Revolucionaria"])
        personaje["vel"] += personaje["vel"]*0.05
    elif zona == "Grand Line":
        isla = random.choice(["Whisky Peak", "Little Garden", "Isla Drum", "Alabasta", "Jaya", "Skypiea", "Sabaody", "Dressrosa", "Wano", "Whole Cake Island", "Elbaf"])     
        personaje["hp"] -= personaje["hp"]*0.05    
        personaje["def"] += personaje["def"]*0.05
        personaje["atq"] += personaje["atq"]*0.05
        personaje["vel"] += personaje["vel"]*0.05    
    elif zona == "Red Line":
        personaje["def"] += personaje["def"]*0.1
        personaje["vel"] -= personaje["vel"]*0.05  
        isla = random.choice(["Mary Geoise", "Red Port"])
    return isla

def ideales():
    # Función que define el "ideal" del personaje dependiendo de su lugar de nacimiento
    try:
        # Si el lugar de nacimiento del personaje es la Isla de la Armada Revolucionaria
        if personaje["nacimiento"] == "Isla de la Armada Revolucionaria":
            # El personaje puede ser pirata, bandido o revolucionario de forma aleatoria
            ideal = random.choice(["pirata", "bandido", "revolucionario"])
            return ideal
        
        # Si el lugar de nacimiento del personaje es Mary Geoise
        elif personaje["nacimiento"] == "Mary Geoise":
            # Posibles posiciones: tenryubito, esclavo o sirviente
            posiciones = ["tenryubito", "esclavo", "sirviente"]
            # Elegimos una posición con probabilidades ajustadas (20% tenryubito, 10% esclavo, 70% sirviente)
            posicion = random.choices(posiciones, weights=[20, 10, 70], k=1)[0]
            
            # Si el personaje es un Tenryubito
            if posicion == "tenryubito":
                # Evento aleatorio: traición, caballero sagrado o noble
                evento = random.choice(["traición", "caballero sagrado", "noble"])
                
                # Si el evento es traición, el personaje puede ser un pirata o revolucionario
                if evento == "traición":
                    ideal = random.choice(["pirata", "revolucionario"])
                    return ideal
                # Si el evento es caballero sagrado, el personaje se convierte en caballero sagrado
                if evento == "caballero sagrado":
                    return "caballero sagrado"
                # Si es noble, el personaje se queda como noble
                else:
                    return "noble"
            else:
                # Si no es un Tenryubito, el personaje puede ser un pirata o revolucionario
                ideal = random.choice(["pirata", "revolucionario"])
                return ideal
        else:
        # Si el lugar de nacimiento no es Isla de la Armada Revolucionaria ni Mary Geoise,        else:
            ideal = random.choice(["pirata", "marine", "bandido", "revolucionario"])
            return ideal
    except:
        # Si ocurre un error, retornamos un valor aleatorio
        ideal = random.choice(["pirata", "marine", "bandido", "revolucionario"])
        return ideal

def infancia():
    # Función que maneja la infancia del personaje en base a su "ideal"
    # Inicializamos algunos atributos del personaje
    personaje["arco"] = None
    personaje["fama"] = 0
    personaje["fruta"] = None
    personaje["edad"] = 18
    # Dependiendo del "ideal" del personaje, se cambia la estadística del personaje
    if personaje["ideal"] == "pirata":
        # Si el personaje es pirata, tiene una lista de ídolos piratas
        idolos = ["Gold Roger", "Shanks", "Monkey D Luffy", "Shirohige", "Kurohige", "Rocks D Xebec","Big Mom"]
    elif personaje["ideal"] == "marine":
        # Si el personaje es marine, tiene una lista de ídolos marines
        idolos = ["Garp", "Akainou", "Sengoku", "Fujitora", "Coby", "Kizaru"]
    if personaje["ideal"] == "pirata" or personaje["ideal"] == "marine":
        idolo = random.choice(idolos)
        print(f"Durante tu infancia has estado entrenando para ser un gran {personaje['ideal']} inspirado por tu ídolo: {idolo}")
        personaje["atq"] *= 1.05
        personaje["def"] *= 1.05
        personaje["vel"] *= 1.05
        personaje["hp"] *= 1.05
    elif personaje["ideal"] == "revolucionario":
        print(f"Durante tu infancia has vivido muchos eventos traumáticos que te han marcado e inpirado en tu lucha contra el gobierno mundial, tienes el ideal de un {personaje['ideal']}")
        personaje["atq"] *= 1.05
        personaje["def"] *= 1.005
        personaje["vel"] *= 1.005
        personaje["hp"] *= 0.85
    elif personaje["ideal"] == "bandido":
        print(f"Desde pequeño has estado viviendo en la miseria e intentando salir adelante por lo que has crecido como un {personaje['ideal']}")
        personaje["vel"] *= 1.25
        personaje["hp"] *= 0.85
    elif personaje["ideal"] == "caballero sagrado":
        print(f"Naciste en una cuna de oro en la cima del mundo y desde pequeño has sido entrenado para ser un {personaje['ideal']}")
        personaje["atq"] *= 1.15
        personaje["def"] *= 1.15
        personaje["vel"] *= 1.15
        personaje["hp"] *= 1.15
    elif personaje["ideal"] == "noble":
        print(f"Naces siendo un {personaje['ideal']} por lo que tu infancia ha sido tranquila y sin grandes aventuras")
        personaje["atq"] *= 0.5
        personaje["def"] *= 0.5
        personaje["vel"] *= 0.5

def dibujoInicio():
    # Función que imprime un diseño ASCII en la pantalla al inicio del juego.
    print(r"""
⬜⬜⬜⬜⬛⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬛⬜⬜⬜⬜
⬜⬜⬜⬛⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬛⬛⬛⬛⬛⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬛⬜⬜⬜
⬜⬜⬜⬛⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜⬛⬛🟨🟨🟨🟨🟨🟨🟨⬛⬛⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬛⬜⬜⬜
⬜⬛⬛⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬛⬛🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨⬛⬛⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬛⬛⬜
⬛⬜⬜⬜⬜⬜⬛⬜⬜⬜⬜⬜⬛🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨⬛⬜⬜⬜⬜⬜⬛⬜⬜⬜⬜⬜⬛
⬛⬜⬜⬛⬜⬜⬜⬛⬜⬜⬜⬛🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨⬛⬜⬜⬜⬛⬜⬜⬜⬛⬜⬜⬛
⬜⬛⬛⬜⬛⬜⬜⬜⬛⬜⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬜⬛⬜⬜⬜⬛⬜⬛⬛⬜
⬜⬜⬜⬜⬜⬛⬜⬜⬜⬛⬛🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥⬛⬛⬜⬜⬜⬛⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬛⬜⬜⬛🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥🟥⬛⬜⬜⬛⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬜⬜⬜
⬜⬜⬛🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨🟨⬛⬜⬜
⬜⬜⬜⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬜⬜⬜⬛⬛⬛⬜⬜⬜⬜⬜⬜⬜⬛⬛⬛⬜⬜⬜⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬜⬜⬛⬛⬛⬛⬛⬜⬜⬜⬜⬜⬛⬛⬛⬛⬛⬜⬜⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬜⬛⬛⬛⬛⬛⬛⬛⬜⬜⬜⬛⬛⬛⬛⬛⬛⬛⬜⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬜⬛⬛⬛⬛⬛⬛⬛⬜⬜⬜⬛⬛⬛⬛⬛⬛⬛⬜⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬛⬛⬛⬛⬛⬛⬛⬜⬜⬜⬛⬛⬛⬛⬛⬛⬛⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬜⬛⬛⬛⬛⬛⬜⬜⬜⬜⬜⬛⬛⬛⬛⬛⬜⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬜⬛⬛⬛⬜⬜⬜⬜⬜⬜⬜⬛⬛⬛⬜⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜⬛⬛⬛⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬜⬜⬜⬜⬛⬛⬛⬛⬛⬜⬜⬜⬜⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬜⬜⬜⬜⬛⬛⬛⬜⬜⬜⬜⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬛⬛⬜⬜⬜⬜⬜⬜⬜⬛⬛⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬛⬜⬛⬛⬛⬛⬛⬛⬛⬛⬛⬜⬛⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬛⬛⬛⬛⬜⬜⬜⬛⬜⬜⬜⬛⬛⬛⬛⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬛⬛⬛⬜⬛⬜⬜⬜⬛⬜⬜⬜⬛⬜⬛⬛⬛⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬛⬜⬛⬜⬛⬛⬛⬛⬛⬛⬛⬛⬛⬜⬛⬜⬛⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬛⬜⬜⬛⬛⬜⬜⬜⬛⬜⬜⬜⬛⬛⬜⬜⬛⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬛⬛⬜⬛⬜⬜⬜⬛⬛⬜⬜⬛⬜⬜⬜⬛⬜⬜⬜⬛⬜⬜⬛⬛⬜⬜⬜⬛⬜⬛⬛⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬛⬜⬜⬛⬜⬜⬜⬛⬜⬛⬜⬜⬜⬛⬛⬛⬛⬛⬛⬛⬜⬜⬜⬛⬜⬛⬜⬜⬜⬛⬜⬜⬛⬜⬜⬜⬜
⬜⬜⬜⬜⬛⬜⬜⬜⬜⬜⬛⬜⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬜⬛⬜⬜⬜⬜⬜⬛⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬛⬛⬜⬜⬛⬜⬜⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬜⬜⬛⬜⬜⬛⬛⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬛⬜⬜⬜⬜⬛⬛⬜⬜⬜⬜⬜⬜⬜⬛⬛⬜⬜⬜⬜⬛⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬛⬜⬜⬛⬜⬜⬜⬜⬜⬜⬛⬛⬜⬜⬜⬛⬛⬜⬜⬜⬜⬜⬜⬛⬜⬜⬛⬜⬜⬜⬜⬜⬜⬜
⬜⬜⬜⬜⬜⬜⬜⬜⬛⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬛⬛⬜⬜⬜⬜⬜⬜⬜⬜⬜⬛⬛⬜⬜⬜⬜⬜⬜⬜⬜
            █▀█ █▄ █ █▀▀   █▀█ █ █▀▀ █▀▀ █▀▀   █▀▀ ▄▀█ █▀▄▀█ █▀▀
            █▄█ █ ▀█ ██▄   █▀▀ █ ██▄ █▄▄ ██▄   █▄█ █▀█ █ ▀ █ ██▄
    """
    )
        
def mensajeSalida():
    # Función que muestra un mensaje de despedida en ASCII cuando el juego termina.
    print(r"""
           █▀▀ █▀█ ▄▀█ █▀▀ █ ▄▀█ █▀   █▀█ █▀█ █▀█     █ █ █ █▀▀ ▄▀█ █▀█
           █▄█ █▀▄ █▀█ █▄▄ █ █▀█ ▄█   █▀▀ █▄█ █▀▄   █▄█ █▄█ █▄█ █▀█ █▀▄
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⡴⠚⢉⡃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣉⠛⠻⢶⢦⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠖⢫⢗⣴⡿⣻⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠑⢰⣜⣎⣎⠷⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠞⢁⣴⢣⣫⠌⣽⢃⣀⡤⠤⠀⠀⠀⠀⠀⠀⠀⠤⠤⠤⢤⣀⣠⡟⣟⣘⠘⡆⠑⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠂⠀⡴⠃⣰⡿⣴⡧⠷⠚⠉⠁⣀⣠⠤⢤⣒⣒⣂⣀⣠⣠⣄⣠⣤⣶⣿⡟⠙⠻⢼⣾⡞⡆⠈⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡜⢁⣾⠟⠋⠙⣿⣶⣶⣶⣷⣶⣶⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⣶⣦⣤⣌⣙⠿⣕⡀⠿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣎⠴⠋⠀⣠⠔⣢⣼⣿⣿⣿⣿⣿⡿⠉⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠟⠛⢫⡙⠈⠳⣄⢻⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡄⠀⠀⣠⠞⠁⢀⡤⣚⣵⣿⣿⣿⣿⣿⣿⣿⠏⠀⠀⠀⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣄⠈⠲⣄⠈⣳⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣶⣴⣉⣀⣴⣫⣾⣿⣿⣿⣿⣿⡟⣿⣿⠋⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⡈⢧⡈⢙⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⢸⣿⠇⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⠀⠘⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠙⣄⠹⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⠋⠀⡙⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⣸⣟⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⠀⠀⠘⣿⣿⣿⡿⣿⣿⣿⣿⣿⣿⡟⢿⡜⣎⢦⠙⣷⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⡼⠃⢠⣯⣾⣿⣿⣿⣿⣿⣿⣿⣿⠁⠀⣻⡧⣀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⢀⣤⠶⢻⣿⣿⡷⢿⣿⣿⣿⣿⣿⣿⣴⡿⡜⣾⡇⠈⣷⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣼⠁⢠⣿⣿⠟⠋⣽⣿⣿⣿⣿⣿⣧⠶⠚⢻⡏⠛⠲⢦⣀⠀⠀⣠⠀⠀⠀⢿⣿⠋⠀⠀⠸⣿⣿⠀⢸⣿⣿⣿⣿⣿⣿⣿⡅⠙⠀⠘⣄⠙⣧⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢸⠃⠀⣼⡟⠁⠀⣠⣿⣿⣿⣿⣿⣿⠁⠀⠀⠈⢇⠀⠀⠉⠈⠑⠀⠙⢦⠀⠀⢸⡏⠀⢀⣠⣶⣿⠇⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⣄⠀⠀⢸⠀⠸⡇⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢸⠀⠀⡇⠁⠄⣰⣿⣿⣿⣿⣿⣿⣇⠀⠀⠠⣄⣿⣶⣦⣄⡄⠀⠀⢄⣿⠆⠀⠘⠃⣰⣿⣷⡿⠿⠶⣦⡀⣿⣿⢻⣿⣿⣿⣿⡝⠻⣦⣠⠀⠇⠀⢳⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢸⠇⠀⢁⣴⡾⠿⢻⣿⣿⣿⣿⣿⣿⠀⣠⣾⠟⠉⠠⠶⠛⠇⠀⠀⣿⠁⠀⠀⠀⠈⠛⣙⣉⣉⣀⣠⡴⠛⣿⡏⣿⣿⣿⣿⣿⡇⠀⠀⠙⠈⢡⠀⣼⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⡖⣾⠄⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣟⢿⡇⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠉⠣⠘⠂⠀⣀⣐⣀⣈⣁⡤⠤⠷⠶⣟⠀⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠱⠀⣧⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠁⢯⡆⠐⡄⠀⠀⠀⣾⣿⡇⣿⣿⣿⣆⢹⣷⠞⠚⠋⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠉⠁⠀⠀⢀⠀⠀⢀⠀⢸⢀⣿⣿⣿⣿⠹⣇⠀⠀⠀⠀⡇⠀⣸⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢸⡃⠀⢳⢰⡀⣄⠈⣿⡀⣼⣛⢻⡏⣿⠃⠀⡆⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⡇⠀⣸⡤⢸⢸⡿⣿⢻⣿⡄⠉⠀⠀⠀⢸⠀⢠⡏⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢧⠀⠈⣧⢷⡙⣮⢯⡧⣇⣯⣷⢹⣸⡆⠦⢽⣄⣘⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠤⠤⠒⠚⡟⠋⠹⢀⡟⡾⣾⣿⢸⠈⢻⣦⣄⣠⢄⡟⣀⡞⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠈⢣⣤⠘⢿⡻⠈⠉⠁⠹⣜⢯⡓⢧⢳⡀⢸⡁⠀⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠀⢀⡼⣽⢗⣫⢏⡞⠀⠛⠿⡿⢃⡞⠀⡞⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠳⣅⠀⠝⣆⠺⣔⢴⣬⣳⢭⣩⣦⢳⣄⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡞⣱⢗⣋⡽⢋⡀⠀⠀⡀⣠⠊⣰⡜⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠢⣄⠈⢳⣌⡛⠋⠉⠁⠀⠈⠳⢼⡷⢤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⡾⢋⣴⡿⠉⠱⣶⠿⢟⡵⣺⠞⢁⣴⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠓⠤⣀⢀⠀⢦⡿⣔⠯⣷⠆⢻⣶⣬⣳⠲⠤⣄⣀⣀⣀⣤⠤⠤⢖⡻⣟⣭⣴⣿⠏⢳⣺⠴⢀⡀⢉⡜⡁⣠⠞⠁⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢥⣀⠉⠻⣋⠀⠀⠈⠓⢻⢎⠙⠒⠯⣄⡀⢀⣐⡶⠾⠛⠋⡽⣸⠃⠉⠀⠀⠀⢚⡩⠞⢡⣾⠟⠁⠀⠀⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡬⠵⣶⡤⣄⡐⠦⠄⢸⢸⠀⠀⠀⠀⠉⠉⠀⠀⠀⠀⣸⠁⡏⠄⣀⣀⣤⠮⣭⣤⠚⠋⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡾⢃⣴⣿⣿⣿⣿⣿⣷⣦⡟⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡏⠀⣷⣛⣉⣬⣤⣤⡈⠹⢳⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣠⠴⠚⠉⠛⠒⢲⡏⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⡞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣧⠀⢻⣿⣿⣿⣿⣿⣿⣧⠈⠙⠦⣄⡤⠴⠦⣧⡀⠀⠀⠀⠀⠀⢀⠀⠀
⠀⠀⠀⠀⠀⠀⢀⡞⢉⣴⣾⣿⣿⣷⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⡏⣰⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡀⠸⣿⣿⣿⣿⣿⣿⣿⣷⣄⣤⣤⣤⣴⣶⣯⡙⢦⡀⠀⠀⠠⠀⠀⠀
⠀⠀⠀⠀⠀⢠⠏⣠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⡴⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⡀⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡄⠱⡄⠂⠀⠀⠀⠀
⠀⠀⠀⠀⠀⡟⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡫⠞⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢤⡙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠈⣿⡀⠀⠀⠀⠀
⠀⠀⢀⡴⠞⣡⣬⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠻⠥⠯⢤⣄⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⣤⠤⠽⠦⠭⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡞⢿⣦⡀⠀⠀
⠀⣰⠏⣡⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⡀⠀⠀⠀⠀⠉⠙⠲⢤⠀⠀⠀⠀⠤⠒⠋⠉⠁⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣜⠛⣆⠀
⠼⠁⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣆⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠘⢆
""")

def elegirOpcion():
    # Función que muestra un diseño en ASCII y pide al usuario que elija una opción
    print(r"""
▄█    █▀▀ █▀█ █▀▀ ▄▀█ █▀█   █▀█ ▄▀█ █▀█ ▀█▀ █ █▀▄ ▄▀█
 █    █▄▄ █▀▄ ██▄ █▀█ █▀▄   █▀▀ █▀█ █▀▄  █  █ █▄▀ █▀█    
    """)
    print(r"""
▀█    █▀▀ ▄▀█ █▀█ █▀▀ ▄▀█ █▀█   █▀█ ▄▀█ █▀█ ▀█▀ █ █▀▄ ▄▀█
█▄    █▄▄ █▀█ █▀▄ █▄█ █▀█ █▀▄   █▀▀ █▀█ █▀▄  █  █ █▄▀ █▀█
    """)
    print(r"""
▀▀█    █▀ ▄▀█ █   █ █▀█
▄██    ▄█ █▀█ █▄▄ █ █▀▄    
    """)
    # Solicita al usuario que ingrese una opción
    opcion = input(r"""
█ █▄ █ ▀█▀ █▀█ █▀█ █▀▄ █ █ █▀▀ █▀▀   █ █ █▄ █ ▄▀█   █▀█ █▀█ █▀▀ █ █▀█ █▄ █ 
█ █ ▀█  █  █▀▄ █▄█ █▄▀ █▄█ █▄▄ ██▄   █▄█ █ ▀█ █▀█   █▄█ █▀▀ █▄▄ █ █▄█ █ ▀█
""")
    # Retorna la opción que el usuario ha ingresado
    return opcion


def modificar_probabilidades(isla):
    # Función que ajusta las probabilidades relacionadas con una isla, si el personaje nace en una isla principal de un arco las posibilidades de que ocurra ese arco aumentan
    for arco in arcos:
        if isla == arco[0]:
            arco[2] += 5

def selectorDeArco():
    # Función que selecciona un arco basado en las probabilidades (pesos)
    # Verifica si hay arcos disponibles
    if arcos:
        # Crea una lista de pesos basada en el tercer valor de cada arco (probabilidades)
        pesos = [arco[2] for arco in arcos]
        # Elige un arco de manera ponderada utilizando los pesos
        arco_elegido = random.choices(arcos, weights=pesos, k=1)[0]    
        # Retorna el arco elegido
        return arco_elegido
    else:
        # Si no hay arcos disponibles, retorna "victoria"
        return "victoria"

def selectorDeEvento():
    # Función que selecciona un evento aleatorio
    # Si el personaje no tiene una fruta asignada(sólo puede tener 1)
    if personaje["fruta"] == None:
        # Define una lista de eventos posibles con probabilidades ajustadas
        eventos = ["enemigo", "fruta", "boss"]
        # Elige un evento aleatorio según los pesos definidos
        evento = random.choices(eventos, weights=[40, 20, 40], k=1)[0]
    else:
        # Si el personaje tiene una fruta, solo puede ser enemigo o boss
        eventos = ["enemigo", "boss"]
        # Elige aleatoriamente entre estos dos eventos
        evento = random.choice(eventos)
    # Retorna el evento elegido
    return evento

def selectorFruta():
    # Selección aleatoria de una fruta de la lista 'frutas'
    fruta = random.choice(frutas)
    # Se modifican los atributos del personaje dependiendo de la fruta
    if fruta == "Gomu Gomu no Mi":
        personaje["hp"] *= 1.10
        personaje["def"] *= 1.10
        personaje["vel"] *= 0.90
        print(r"""
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠤⠤⣀⠀⠀⠀
⠀⠀⠀⠀⣀⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⣀⡠⢔⣒⡩⠤⢒⡨⠭⡢⣳⠀⠀
⠀⠀⠀⠀⡇⣴⣬⣥⣒⣒⣒⣒⣒⣮⢉⣴⠚⠉⠁⠀⠀⣎⣎⣓⣣⣳⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠉⣉⣹⡬⢀⣀⣀⠀⠀⠀⠘⠬⠭⠵⠋⠀⠀
⠀⠀⠀⠀⠀⠀⣀⡤⠴⣮⢩⢋⡰⡞⢸⡤⢠⠙⡭⡖⠒⡦⢄⡀⠀⠀⠀⠀
⠀⠀⠀⠀⡰⢫⢞⡱⢂⣞⣹⡠⠳⠼⣭⢤⣥⣚⠡⢷⠈⢳⡠⣽⣄⠀⠀⠀
⠀⠀⢀⣴⡇⠧⢤⠖⠉⣀⡀⢛⡟⢒⡶⢋⠐⡂⢩⢲⠻⣄⠑⡳⢋⣆⠀⠀
⠀⡴⣟⣠⡙⣄⢸⠀⢸⠀⠾⢐⡟⢸⠄⣡⠋⢙⠢⢸⡇⢌⢓⣖⣺⡟⣧⠀
⢰⣹⡇⣄⣸⡘⡌⣦⣀⠙⣓⣉⣈⣌⣳⡄⠛⣦⣴⠋⣤⣞⣵⣤⣚⣿⣻⡄
⠀⣿⡀⣿⣷⠃⡇⠜⡩⠲⠋⣩⠯⠽⣙⠳⡦⠴⠦⢖⠫⣎⠱⣈⡽⣝⡿⡆
⢸⡘⡷⣄⣂⣽⠓⠛⠒⣥⡾⢁⡞⠲⢸⠌⢻⠈⢆⣡⣘⣇⠡⡷⡿⣭⡿⣽
⡬⠵⢱⠠⡟⢠⡜⣶⡑⡐⣿⡂⡙⠖⢫⢨⡾⢫⠱⣐⢈⠹⣷⢟⡳⣏⣿⡟
⠘⣤⡾⠲⢧⠌⠧⣩⣠⠵⢡⢙⣲⣚⡒⣻⢁⠣⣞⣉⡽⣰⢯⣯⢓⣯⣾⠁
⠀⠘⡔⣿⢚⡟⠴⣠⡡⢴⠞⢅⣂⡄⡙⢾⡄⢃⣘⣦⢾⣽⣯⣾⢿⣿⠇⠀
⠀⠀⠙⣎⣩⣐⣌⣐⣠⡇⣉⣏⣄⣟⣠⣾⢻⣾⣷⣼⣷⣻⣞⣿⣾⡏⠀⠀
⠀⠀⠀⠘⢿⣻⢿⣽⡷⣧⣝⡻⢾⡽⣽⣻⣼⣶⣿⣟⢮⣟⠾⣹⠞⠀⠀⠀
⠀⠀⠀⠀⠀⠉⢯⣿⡿⣞⣯⡟⡷⣞⠯⣿⢭⣿⡽⣧⡻⠯⠋⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠉⠚⠓⠛⠛⠛⠓⠛⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀     
Has encontrado la fruta del diablo Gomu Gomu no Mi la cual otorga poderes de goma, o al menos eso es lo que cuentan, hay leyendas que dicen que en realidad es una fruta misteriosa.
""")
    elif fruta == "Mera Mera no Mi":
        personaje["atq"] *= 1.20
        personaje["vel"] *= 1.10
        personaje["def"] *= 0.90
        print(r"""⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡴⢋⣉⠩⠹⢆
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣷⡏⣹⠂⠈⡜
⠀⠀⣀⠠⠤⠤⠤⢤⡤⠤⠲⠒⠒⠒⠒⠒⠒⠒⠲⠤⠴⠤⠤⠤⠗⠁⢀⡼⠁
⠀⣼⠀⠀⠀⡀⠀⣀⡤⠤⠤⠐⠢⡔⠀⢠⡖⠛⠒⠚⠚⠒⠦⣔⡄⣀⡞⠀⠀
⠀⢣⡁⢶⠳⣥⢠⠃⠀⠀⠀⠀⠠⡇⠀⢸⠃⠀⠀⠀⠀⠀⠀⢸⠀⡜⠀⠀⠀
⠀⠀⡷⢸⡆⠸⣸⠀⠀⠀⠀⠀⢀⡇⠀⢸⡀⠀⠀⠀⠀⠀⠀⢸⣦⠃⠀⠀⠀
⠀⠀⠘⣼⠀⠀⠉⢀⠀⡤⣶⣲⡾⠁⠀⠘⢧⣰⣶⣯⡶⣄⠀⠀⠁⠀⠀⠀⠀
⠀⠀⠀⠉⠀⢀⣔⣿⣽⣽⢿⣇⡄⡀⣤⡀⣀⣏⣿⣿⣿⣷⡷⡄⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢸⣷⡿⡻⣻⣱⡿⢿⢻⣾⣿⢷⡿⡿⣻⣷⡯⣿⢾⢿⡄⠀⠀⠀⠀
⠀⠀⣰⣮⡷⣿⣽⣿⣿⡿⣾⣺⢼⣮⣹⠵⣷⣿⣻⣞⣷⣟⣷⣿⣳⡄⠀⠀⠀
⠀⠀⣏⣿⢟⣷⣶⢯⡻⣻⣗⣾⣾⡷⢟⣿⣷⢿⡽⣾⡻⣝⣼⡵⣿⡇⠀⠀⠀
⠀⢰⣻⣿⣾⡿⣾⣺⢿⢾⣽⡗⣒⠾⣟⡻⣿⣟⠿⣿⣿⢾⣯⡽⣏⡇⠀⠀⠀
⢠⠪⢶⣿⣿⣻⢿⣾⣿⣚⡿⡇⣿⣷⢝⢽⣶⢸⣿⡎⣿⣿⣒⣿⡿⣝⣆⠀⠀
⠈⣾⣟⣿⡏⣯⣞⣟⣞⣻⢳⣷⢯⣥⣭⣵⢽⡼⣿⣷⣷⢿⣿⢯⣻⢽⠊⠀⠀
⠀⠱⣛⣳⡯⢿⣖⣟⣼⣻⢽⡏⣻⢟⣿⠿⣳⣽⡿⣻⣿⣿⣿⣾⣳⣅⠀⠀⠀
⠀⠀⠰⣿⣟⣿⠿⣵⣛⣝⣽⣷⣯⢯⣾⢯⢿⡟⣿⣯⡿⣸⣖⣿⣽⡻⠀⠀⠀
⠀⠀⠀⠙⣮⣿⡛⣟⣿⣝⡼⡼⣿⡿⣭⣿⣻⢟⣿⢳⣿⣽⡽⢮⡷⠃⠀⠀⠀
⠀⠀⠀⠀⢀⣾⢿⣿⣾⣭⣿⣟⣿⣭⠿⣿⡿⣽⣾⣻⡫⠊⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠙⠾⠽⠔⢷⣚⣍⣓⡟⢮⡻⠝⠓⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀    
Has encontrado la fruta del diablo Mera Mera no Mi, la cual otorga el poder de controlar y transformarte en fuego, permitiéndote lanzar llamas devastadoras.
""")
    elif fruta == "Hie Hie no Mi":
        personaje["def"] *= 1.20
        personaje["atq"] *= 1.10
        personaje["vel"] *= 0.90
        print(r"""
⠀⠀⠀⠀⠀⠀⠀⢠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⡶⢆⣄⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣰⣿⢀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣏⣯⣶⡉⣎⣷⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢰⡿⢸⠈⡿⠷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠹⣏⣛⠇⣸⣿⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠘⣷⡪⣘⠋⣘⣀⣂⠤⣬⢭⣋⡙⣉⣩⣭⡴⣄⣂⡐⣐⣂⣲⣵⠏⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠈⠙⠋⠛⢊⠉⠉⡥⠀⡜⢀⣽⣾⣀⠀⡺⣀⠌⠟⢉⡉⡉⢤⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢨⡪⢀⡐⠀⣏⢤⠚⠉⠦⢣⡃⡄⢸⠀⠠⡂⣦⠰⡁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢡⢂⠈⠮⡎⣗⢢⠊⡌⠄⣄⠔⠉⠀⠐⠞⠀⠀⠈⢦⡀⠐⢲⢄⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢀⢔⠈⠀⠀⣀⠔⠋⠁⢦⡹⠀⠘⢦⡽⢀⡠⠐⡢⠂⠀⠀⠀⢀⢛⡔⢀⡮⡛⣦⣀⡀⠀⠀
⠀⠀⠠⡰⣷⠁⢀⠂⠤⠁⠀⠀⡀⠠⢀⠀⠀⠀⢏⣧⡂⢸⡐⠁⠀⠈⡄⣄⢺⠁⣖⢣⡿⢁⣬⠀⠀⠀
⠀⠀⠐⢴⠀⡌⡡⢼⠟⡄⠀⡎⠠⠀⢀⠂⢀⠧⡌⠱⣱⡀⠣⣌⢜⡨⢽⠁⣿⠀⠩⣗⣳⠀⢎⡆⠀⠀
⠀⠀⡦⠃⢠⡿⣇⠙⢃⠘⡼⢀⠄⡠⣀⠦⠚⠊⠁⠀⠉⠁⠀⠈⠓⡉⠀⢴⠁⡇⠀⠙⢾⠃⠀⢓⡄⠀
⠀⠄⠀⠀⠈⠋⠃⢀⡹⠀⠹⣖⡚⢱⣍⠀⠀⠀⠀⠀⡀⢀⠀⠀⠈⠸⡄⠀⠉⢀⠀⠀⠀⣱⠂⠰⣭⡄
⢰⣀⠐⠒⡄⢀⡔⠈⠀⠀⠀⠀⠀⠀⠑⢦⢀⠠⠔⠁⠀⠀⠈⠂⠀⡁⢳⢘⠀⠀⢠⠀⢠⠜⡒⠂⡾⡄
⢸⢤⣂⢦⢋⣼⠀⠀⢠⠂⠁⠀⢀⠀⠀⠌⠀⢠⠂⠈⠃⢀⠀⢊⠐⣈⢹⣔⣢⣐⣁⢦⣻⠀⢧⢾⡹⡅
⠈⣾⡆⣏⢎⣿⡀⠄⢰⠀⡠⠀⠢⠐⡴⡀⢘⠘⣆⠦⣐⠢⡜⣮⡳⣤⣳⠁⣰⡝⢮⡳⡽⠀⣎⢷⣹⠆
⠀⠙⡉⢳⡾⣖⣯⣐⡂⡐⣄⢢⡜⠆⣏⡕⠈⢲⣄⡉⠋⢷⡹⢞⢡⢧⣻⡀⡝⢧⠘⠳⢙⠀⡜⣯⠊⠀
⠀⠀⢠⠀⠻⠞⠘⢮⡳⣝⠮⠋⢀⢦⠈⠁⣀⠧⢎⡵⣃⡠⡟⣎⠙⠮⠵⠁⣸⢱⢳⣆⡶⡸⣝⣷⠀⠀
⠀⠀⠀⢆⡀⠀⠎⡀⠿⣼⡃⣰⢩⠮⡝⡽⣌⠻⣜⣲⣯⠳⡭⡜⣳⠖⡶⣛⢥⣫⢞⣽⣳⣛⣾⡛⠀⠀
⠀⠀⠀⠈⢷⣎⣦⣽⣭⣷⡇⣵⢯⣷⣹⣶⣩⣷⣹⣶⣯⣿⣶⣹⣆⣿⣶⣭⣾⣵⣯⣿⣷⣯⡷⠀⠀⠀
⠀⠀⠀⠀⠀⠻⣻⣟⡿⣿⣻⣿⢿⣻⢏⣿⢻⣏⢿⣿⣟⣿⢟⣿⣛⢷⡻⣟⣏⣿⣻⢿⡻⠋⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠉⠛⠳⠻⠾⠿⣟⣿⣞⡿⣞⡿⣾⣽⢾⣻⢾⣽⢾⣽⣻⣞⡷⠏⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠃⠻⠻⠽⠟⠗⠛⠁⠈⠉⠘⠛⠚⠃⠀⠀⠀⠀⠀
Has encontrado la Fruta del Diablo Hie Hie no Mi, la cual otorga la habilidad de generar y manipular hielo, congelando todo a tu alrededor.
""")
    elif fruta == "Pika Pika no Mi":
        personaje["vel"] *= 1.30
        personaje["atq"] *= 1.15
        personaje["def"] *= 0.90
        print(r"""
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⣶⢤⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣽⠋⣈⡏⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣜⢦⣉⠉⠀⠀⠀⠀⠀⠀⢀⠾⣆⣀⣀⡀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠓⢿⣷⣄⠀⠀⠀⠚⢯⣍⠀⠀⢩⠟⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢈⣇⢛⣵⠮⠭⠯⢷⢾⡴⠴⣜⡄⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⠋⢠⠏⠀⠀⠀⠀⠘⠋⠀⠀⠀⠉⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡴⠃⢬⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⢀⢴⣎⡻⢃⢠⠯⠢⣄⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⡿⣭⣍⡉⡝⠉⠡⠲⣏⠀⠀⠘⣷⡛⣀⣸⡫⠿⣏⠭⠿⡇⠀⠀⠀⠀
⡇⢎⣳⣨⠫⠶⣒⠒⡞⠛⣛⢣⠈⠲⡄⢻⡘⢯⡴⣒⣄⠁⠀⠀⠀⠀
⢧⣠⠞⢁⣀⣠⠤⢿⠷⣞⢻⣹⠖⠒⠧⣄⣈⡒⠽⢆⣸⠀⠀⠀⠀⠀
⢸⠛⣏⠙⢦⣀⣠⣧⢶⠄⢻⢁⡤⢄⠀⠘⣼⠁⠉⠹⣿⠀⠀⠀⠀⠀
⢸⡄⢸⡴⠚⠙⠢⣣⠈⠋⢸⠜⠐⠞⠀⢀⠏⢇⠀⠀⡇⠀⠀⠀⠀⠀
⠈⣇⡾⡇⠀⡤⡄⡃⡳⢖⣻⣘⢄⡀⠠⣊⢠⣈⡓⢲⠁⠀⠀⠀⠀⠀
⠀⣧⣀⢣⡀⠑⠒⡙⢀⡀⢹⠀⠑⠔⠁⣀⣀⠀⠙⣾⠀⠀⠀⠀⠀⠀
⠀⢸⡈⢳⡹⢷⡒⡇⢀⠃⣸⡗⠀⢸⡜⠡⠼⠀⠀⡎⠀⠀⠀⠀⠀⠀
⠀⠀⢷⡞⠀⡄⡇⠰⠚⠫⣼⡌⣂⠤⢘⢄⣀⣀⢴⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠘⣇⠀⠑⢁⡷⢪⡆⢸⡜⢁⠠⠀⠱⣠⢠⠃⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠘⣖⢒⡯⡵⣀⣠⣺⡑⠼⡀⠁⢀⡿⠃⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠈⠳⣠⡜⣸⠋⢸⠚⠈⣼⣩⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠈⠓⠯⣄⣻⣐⠾⠛⠁⠀⠀
Has encontrado la Fruta del Diablo Pika Pika no Mi, la cual otorga la capacidad de moverte a la velocidad de la luz y lanzar poderosos rayos.
""")
    elif fruta == "Zushi Zushi no Mi":
        personaje["atq"] *= 1.30
        personaje["def"] *= 1.15
        personaje["vel"] *= 0.85
        print(r"""
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⣽⠦⡢⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣟⠇⣾⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠀⠀⣴⠏⣘⡧⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣀⢀⠀⠀⢀⣠⡶⠛⠗⣾⠕⠁⠙⡷⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢨⡻⢋⣉⣉⠻⡧⣔⠟⠓⢁⠤⣤⣤⢷⣂⡴⡿⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢰⢟⡅⢏⡺⣪⢦⠈⠓⠀⣬⣽⡻⣿⣫⠀⠀⣬⣿⡀⠀⠀
⠀⠀⠀⢀⡤⣤⣠⣤⠄⠘⣪⡶⣲⣟⣯⡇⠀⣘⣾⡇⠀⠘⢻⣧⡀⢈⣿⠚⠀⠀
⠀⠀⠀⣼⢩⣶⣶⣎⡇⢀⣻⢬⣙⠯⠛⠓⢠⣭⣿⣛⡧⣄⡀⢹⡷⢎⡇⠀⠀⠀
⠀⠀⠀⣟⢸⣿⡿⣼⣷⣽⣾⡷⠁⠀⠀⠐⠀⣿⢿⣿⢻⣾⣿⡻⣿⡍⠀⠀⠀⠀
⠀⠀⢠⢟⠧⣭⢗⣿⣿⣏⣽⡇⡤⠄⠀⠈⣐⡋⢵⣳⣿⣿⣿⣿⣾⢧⡀⠀⠀⠀
⢀⣜⣵⣵⣷⣫⣿⣿⣿⣿⣿⣿⣏⠆⢰⣽⣷⣶⣵⣽⣿⣿⣿⣿⣿⣯⠧⣤⡀⠀
⢸⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣗⢠⠘⣿⣿⣿⣯⣿⣯⢛⠻⣿⣿⣿⣿⣿⡎⡄
⠀⠉⠶⣾⣽⣿⣿⣿⣿⣿⣿⣿⣿⣿⠸⣿⣿⣿⣿⣿⣿⣦⣣⣾⣿⣿⣿⣿⠇⡆
⠀⠀⠀⠹⣺⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⡏⣬⠁
⠀⠀⠀⠈⡞⣿⣿⣿⣿⣿⣿⣿⣿⡿⠘⣻⣿⡿⡿⠛⣿⣿⣿⣯⣿⣿⣿⣇⡇⠀
⠀⠀⠀⠀⢹⡜⣿⣿⣿⣿⣿⣿⣯⡢⣠⢝⡓⠉⣞⣽⣾⣿⣿⣿⣿⣿⣿⣍⠇⠀
⠀⠀⠀⣾⡫⠓⠍⠙⠻⣿⣿⣿⣿⣿⣿⣷⣮⣆⢱⣿⣿⡟⢝⣷⠶⠚⠒⠚⠁⠀
⠀⠀⡶⡕⠁⠁⠠⠈⠐⠀⢈⢿⣿⣿⣿⣿⣿⡟⣮⢙⣽⠞⠉⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠷⣑⡬⠀⢤⣤⣔⠼⠖⠑⠵⠶⠶⠷⠞⠋⠚⠛⠋⠃⠀⠀⠀⠀⠀⠀⠀⠀
Has encontrado la Fruta del Diablo Zushi Zushi no Mi, la cual otorga el poder de controlar la gravedad, permitiéndote aplastar enemigos o elevarte en el aire.
""")
    elif fruta == "Mochi Mochi no Mi":
        personaje["def"] *= 1.20
        personaje["atq"] *= 1.10
        personaje["vel"] *= 0.90
        print(r"""
⠀⢀⣠⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀
⣰⠟⠉⠀⠈⢻⡄⠀⠀⣠⣴⣶⣶⣶⣶⣶⣤⡀⠀⠀⠀⠀⣿⣿
⣿⠀⢲⣄⣤⡾⢁⣴⡿⠋⠀⠀⢸⣿⠁⠈⠙⠿⣷⣶⣴⣾⣿⠏
⠹⢦⣀⣈⣤⡶⠟⠉⠀⠀⠀⠀⢸⣿⡀⠀⠀⠀⠀⠉⠉⠉⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⣐⢶⣿⣿⣷⣂⡤⣀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢀⣴⠬⠽⠮⠬⡜⢙⢛⠛⢂⣐⡹⠭⡦⡀⠀⠀⠀
⠀⠀⠀⠀⣠⡫⠝⢔⠩⠁⣠⠱⠬⠄⡋⠀⢀⠑⡬⠎⢺⢂⠀⠀
⠀⠀⠀⢰⠛⠆⢂⠔⡉⠁⡆⠀⢌⠀⡰⠒⠒⠠⡏⡁⠺⣰⣃⠀
⠀⠀⠀⡧⡑⢫⣼⡀⠁⠁⣐⣄⠔⠁⠐⢠⡉⠂⣩⠀⠅⣅⡘⠀
⠀⠀⠀⣿⠱⠀⡀⡀⠩⠏⢀⠸⣀⣀⠂⠀⢏⠊⡀⢈⠋⠉⣤⠀
⠀⠀⠀⠰⡲⣚⣀⠂⡰⠂⡐⠀⡸⠂⠉⠉⠘⣀⠈⢁⠑⡡⡟⠀
⠀⠀⠀⠀⠡⡠⠠⠂⢸⠈⠠⠌⢢⡘⠀⡁⠀⢑⢡⢹⡉⡕⠀⠀
⠀⠀⠀⠀⠀⠈⠫⡠⣉⢢⣈⢰⠊⠩⠍⣸⠦⡤⢐⡧⠊⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠈⠑⠺⢕⠬⠒⣀⠤⢥⠡⠓⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⡠⠊⢉⡽⡌⢱⡜⡖⠉⢦⡀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣌⢭⠹⠭⠂⠬⡁⠢⢨⢓⠒⢺⡄⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢑⡷⠘⠎⣣⣑⣊⠕⠸⠠⡰⢡⠃⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠙⠯⡯⡣⣖⣄⡑⣎⢓⠕⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠁⠛⠂⠈⠁⠀⠀⠀⠀⠀⠀⠀
Has encontrado la Fruta del Diablo Mochi Mochi no Mi, la cual otorga la habilidad de generar y controlar mochi pegajoso, dificultando los movimientos de tus enemigos.
""")
    elif fruta == "Bari Bari no Mi":
        personaje["def"] *= 1.40
        personaje["vel"] *= 0.80
        print(r"""
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠠⡐⠖⠲⢦⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⢔⠁⠁⠀⠀⠀⠀⠙⢷⡀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠮⠡⠊⠉⠉⠙⡤⣀⠀⠈⢳⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡎⠀⠀⠀⠀⠀⢸⠃⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠸⠁⠀⠀⠾⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣇⠀⠀⠀⠀⡰⠃⠀⠀⢸⠃⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣟⠂⠈⡃⠀⠀⢀⡰⠃⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢶⠺⢿⠓⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⠠⡤⢰⡶⠚⠗⠾⢷⠤⣤⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢀⠔⠾⠒⡠⠠⡀⢄⠌⠁⡅⣅⣩⡙⠓⣈⠙⢲⣤⡀⠀⠀⠀⠀⠀
⠀⠀⠀⢠⠾⢋⠀⢐⠰⠈⠁⡀⠬⠀⡡⠔⠀⠦⡈⠉⢁⠄⠒⠋⠛⢲⡄⠀⠀⠀
⠀⠀⡐⢹⠁⠀⠠⠊⠈⡒⠁⢀⢔⢲⡌⡆⣐⡅⡦⡀⡌⢀⡄⡢⠈⡔⢿⣂⠀⠀
⠀⣐⠄⢼⠀⡐⡨⠐⡄⡀⠀⠘⠌⠉⠔⠁⢈⡒⢕⠁⠡⡘⠾⠃⠇⣷⣕⣴⣃⠀
⢰⢰⠀⠸⠀⠃⠆⠀⡄⠐⠀⢀⣀⣀⠠⢪⡬⡠⡄⠈⠆⣈⠡⠌⡖⠀⠸⠃⢬⡆
⢸⠀⠪⠁⡌⠉⠢⠁⠊⠠⠒⠫⠢⡀⠡⣀⣓⡯⠃⡴⢋⢔⢁⢱⠈⡦⢕⡄⢀⡇
⠸⠀⢉⢂⢃⠣⠑⡔⠳⢜⠀⢀⠇⠐⡀⣀⠔⣂⣁⠀⢀⠀⠛⠊⢀⠻⡖⣫⢼⡇
⠀⢣⠆⠉⠀⡉⡒⠁⠣⠂⠈⠃⢄⠀⠟⡕⢁⢄⠀⡈⠆⡂⠀⢐⠥⢤⡉⢁⣽⠁
⠀⠀⢂⢡⡌⢂⡈⡄⠁⡔⡀⠢⡀⠂⠠⡻⢈⣋⣀⢅⢛⠛⡐⢥⣷⣇⢥⣿⠇⠀
⠀⠀⠀⠣⡠⡘⠔⠁⢂⠙⠚⡠⢃⣇⣀⠈⠐⠒⡂⣅⠀⠢⡁⠨⣿⣯⡞⠁⠀⠀
⠀⠀⠀⠀⠈⠪⢦⠄⣠⣬⣍⣰⣹⡥⣼⠁⠄⣴⣳⣽⣽⣷⣲⣤⠿⠉⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠉⠛⠿⢿⣘⣮⣿⣿⣠⣄⣷⣿⡿⠿⠛⠉⠁⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠉⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
Has encontrado la Fruta del Diablo Bari Bari no Mi, la cual otorga el poder de crear barreras casi indestructibles para defenderte de cualquier ataque.
""")
    elif fruta == "Soru Soru no Mi":
        personaje["hp"] *= 1.20
        personaje["atq"] *= 1.20
        personaje["def"] *= 0.90
        print(r"""
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⡀⠀⠤⠤⢄⣀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣤⠶⠶⣖⣤⢄⠀⠀
⠀⠀⠀⠀⠀⠀⢀⠠⢶⢹⡏⢪⢵⠀⠸⡔⠁⡠⡀⢩⠁⠂⢄⡀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠱⢳⡄
⠀⠀⠀⠀⡠⢎⠑⣄⡸⢠⠉⠉⣘⣀⠀⢃⢸⠀⠓⢸⠀⠀⠀⠙⢦⡀⠀⣀⢤⣄⠶⠶⢠⡄⡀⢀⣿⢹
⠀⠀⢀⠎⢠⠔⠓⢲⣒⠗⠶⢴⢡⡂⡇⡞⡀⠑⠐⢁⡠⠄⠀⠤⠤⢳⣕⡭⠔⠂⠉⠈⠀⠉⣺⣾⣣⠟
⠀⢠⢇⡀⠇⠋⢰⠀⣇⢸⠉⢘⠦⠭⠕⠁⠘⠄⡀⢇⠠⢊⡵⠀⠀⢀⠻⣆⠀⠀⠀⠀⠀⢸⡍⡼⠁⠀
⢀⡆⢀⣈⣮⠀⢉⣜⠠⠣⡀⠀⣀⠔⠊⠉⠉⠑⠺⡂⢍⠉⠀⠀⢀⢃⠧⢸⣆⠀⠀⠀⠀⠸⡱⣇⠀⠀
⢸⠀⡎⡭⠟⡶⠁⠀⠀⡀⠈⡶⠁⣀⠤⠄⡀⠀⠀⠘⠄⢑⡀⢎⡿⡾⢀⠡⣿⡆⠀⠀⠀⠀⠑⢝⢦⡀
⢸⡄⠈⠓⠈⢇⠀⠀⠀⡇⠀⡇⠀⡅⠀⠀⠘⡄⠀⡖⣻⢀⠇⠚⢫⣔⠈⢄⣿⡇⠀⠀⠀⠀⠀⠀⠙⠻
⠘⡌⠢⡀⠀⠈⠑⠒⢈⡠⠊⠘⡦⠌⣀⠀⡔⠃⠀⠘⠲⡊⢈⡎⣱⡆⡧⢨⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠱⣀⢬⣅⠐⠀⢈⣁⡀⠀⠀⡧⡀⠀⠰⡁⠒⠀⠲⡀⢻⡀⠳⣋⡰⣃⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠱⡪⠧⠃⢘⠰⣤⠅⠀⡘⠀⠈⠢⡀⠑⢤⠤⠞⡁⢺⡇⠡⠔⣠⣿⠟⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠘⢄⠀⠈⠂⠀⠰⢻⠉⡆⣀⡤⢵⠈⣄⢦⡡⠐⣨⠡⣱⣼⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠉⠲⢖⡀⣇⠘⡛⢱⡝⠼⣨⠄⡙⣿⠆⣡⣿⡾⠟⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⠒⠶⠤⣮⣽⣥⣶⠶⡿⠟⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
Has encontrado la Fruta del Diablo Soru Soru no Mi, la cual otorga la capacidad de manipular almas y otorgarles vida a objetos y seres sin conciencia.
""")
    elif fruta == "Tori Tori no Mi: Modelo Fénix":
        personaje["hp"] *= 1.50
        personaje["def"] *= 1.20
        personaje["atq"] *= 0.90
        print(r"""
⠀⠀⠀⠀⠀⠀⠀⠀⠲⡢⢀⡀⠀⠀⢀⡠⢔⠖⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠰⠤⡀⢀⠶⡦⡰⠁⠜⡄⢠⠣⠂⢜⢴⡶⣀⢀⢤⠆⠀⠀⠀
⠀⠀⠀⠀⠀⢱⡁⢧⣁⠧⠀⢌⢸⡇⡡⠀⠸⢎⡺⢈⡎⢨⠀⠀⠀⠀
⠀⠀⣄⠀⢃⠸⠰⡊⠀⣀⠅⢄⠫⡑⣠⠈⣠⠀⢁⠆⠇⡸⠀⣠⠀⠀
⠀⠀⢩⠠⠨⠬⠑⡇⢁⠁⡀⠀⠂⠐⠀⢁⠁⡀⠠⠊⠵⠥⠔⠝⠀⠀
⠀⠀⠀⠣⠅⣀⣀⡑⠴⠇⡈⠂⠂⡐⢀⠁⠘⠧⢋⢀⣀⡨⠔⠀⠀⠀
⠀⠀⠀⠠⢄⢀⠫⡀⡶⠠⠹⢆⢁⠀⣔⠋⠤⣶⢀⠅⡀⡠⠄⠀⠀⠀
⠀⠀⠀⠀⡣⠇⠤⠈⠩⠠⡡⡈⡄⢠⢅⢈⠄⠍⠥⠠⠨⢜⠀⠀⠀⠀
⠀⠈⠛⠓⠄⠊⠘⠒⠂⠄⢀⠑⢆⡰⠆⠠⡤⠐⠒⠒⠑⠨⠘⠛⠉⠀
⠀⠀⠀⠀⠀⠀⠀⠴⠖⡂⠲⡈⠘⠇⠠⠞⢒⠲⠤⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠆⣀⡠⡢⢉⣨⢀⠰⣮⠈⣄⣉⡕⢄⠆⠀⡀⠀⠀⠀⠀
⠀⠀⠀⠀⠘⠄⢴⡫⠂⢢⠐⠂⢤⠨⡀⠀⠔⡛⢉⢁⠓⢝⡄⠀⠀⠀
⠀⠀⠀⢆⠨⠃⢄⠀⣐⡂⠐⠰⠩⡍⢀⣊⠉⠤⡃⠀⢂⡀⢬⠀⠀⠀
⠀⠀⠀⠎⠂⠄⡁⠴⡀⠄⢾⢀⠈⠊⢀⡀⡀⢁⢐⠈⠈⠔⢊⠂⠀⠀
⠀⠀⡆⠠⠀⠤⢢⠈⠄⠳⠘⠂⢃⠈⡃⡠⠰⡨⠀⢀⢚⠁⡀⣸⡀⠀
⡀⠠⠦⡦⠁⡐⠠⠁⠀⠤⠡⣈⢀⠂⠌⢅⠇⠠⠘⢀⠊⡄⡊⠁⡅⠀
⠉⢎⡈⣠⠄⡐⢀⡸⢀⠀⢂⡰⠐⣆⡈⠱⠐⣐⠍⠒⠀⠅⠀⡀⣧⡀
⢠⡸⡔⡐⢁⡂⠎⠰⠈⠔⣀⠀⠄⠉⠀⠄⣡⢡⠚⢀⢄⡒⠀⢀⠙⡇
⠸⢑⠌⠄⡀⠐⠌⣠⡈⠄⠃⠌⠤⠈⢌⢀⠁⡀⣐⣠⠈⢈⠁⣂⡍⠀
⡢⠑⠀⡬⢐⡈⠌⠩⡁⢃⠄⢀⢄⠒⠩⢀⠂⣴⢀⠠⠄⢀⠫⢘⠀⠀
⠠⡄⠻⠐⢃⠠⠘⠄⠠⡠⠂⠡⢐⠌⠄⠃⡀⠇⣃⠲⠃⠂⠠⡨⠀⠀
⠀⠢⡠⠘⠠⠐⠠⢈⠀⢄⡡⠉⢤⠐⠈⡀⠐⡐⠒⣅⠀⠡⢈⡒⠄⠀
⠀⠀⠈⡒⡁⠄⡁⠠⠈⡐⠠⠡⠒⠂⢄⠢⠂⡐⠂⢀⠠⠁⢸⠀⠀⠀
⠀⠀⠀⠉⠀⠳⢄⠁⡐⠀⡁⢁⠂⠡⠀⢂⠐⢀⠐⣠⣀⠜⠁⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠉⠁⠉⠐⠒⠒⠓⠂⠒⠚⠉⠀⠀⠀⠀⠀⠀⠀⠀
Has encontrado la Fruta del Diablo Tori Tori no Mi: Modelo Fénix, la cual otorga la habilidad de transformarte en un fénix, regenerando tus heridas con llamas curativas.
""")
    return fruta
# Función para consumir una fruta del diablo
def consumirFruta(fruta):
    personaje["fruta"] = fruta  # Asigna la fruta seleccionada al personaje
    frutas.remove(fruta)  # Elimina la fruta de la lista de frutas disponibles
# Función para descartar una fruta sin consumirla
def descartarFruta(fruta):
    frutas.remove(fruta)  # Elimina la fruta de la lista de frutas disponibles
# Función que describe el final de un personaje noble
def finalNoble():
    print(f"Vives una vida en la cima del mundo dónde has observado grandes guerras y batallas sin tan siquiera inmutarte.")
    print(f"No has tenido escrúpulos ni piedad con tus esclavos.")
    print(f"Has muerto a la edad de {personaje['esperanzaVida']} años sin penas ni glorias.")  # Muestra la edad del personaje al morir
# Función para mostrar el mensaje de victoria si el personaje tiene el ideal pirata
def victoriaPirata():
    print("\n🏴‍☠️ ¡Has logrado tu sueño como pirata! 🏴‍☠️")
    print("Los mares rugen con tu nombre y la bandera de tu tripulación ondea en lo más alto.")
    print("¿Te convertirás en el Rey de los Piratas o solo serás otra leyenda en el mar? ¡El mundo es tuyo!")
# Función para mostrar el mensaje de victoria si el personaje tiene el ideal marine
def victoriaMarine():
    print("\n⚓ ¡Justicia prevalece! ⚓")
    print("Has ascendido en la Marina y ahora eres un símbolo de orden y disciplina en los mares.")
    print("Los piratas tiemblan al escuchar tu nombre. ¡La paz del mundo depende de ti!")
# Función para mostrar el mensaje de victoria si el personaje tiene el ideal revolucionario
def victoriaRevolucionario():
    print("\n🔥 ¡El pueblo ha despertado! 🔥")
    print("Gracias a tus esfuerzos, el Gobierno Mundial tambalea y la libertad florece en cada rincón.")
    print("Eres una chispa en la revolución que cambiará el destino del mundo. ¡Adelante, camarada!")
# Función para mostrar el mensaje de victoria si el personaje se tiene el ideal caballero sagrado
def victoriaCaballeroSagrado():
    print("\n👑 ¡La voluntad de los dioses se ha cumplido! 👑")
    print("Los Dragones Celestiales han reconocido tu lealtad, y ahora formas parte de la élite del mundo.")
    print("Desde lo más alto de Red Line, gobiernas sobre los mortales. ¿Justicia divina o tiranía absoluta?")

# Función para mostrar el mensaje de victoria si el personaje tiene el ideal bandido
def victoriaBandido():
    print("\n🏔️ ¡Los mares y las tierras te pertenecen! 🏔️")
    print("Has forjado tu leyenda como un temido bandido, saqueando islas y desafiando a cualquiera que se interponga en tu camino.")
    print("Ni la Marina ni los piratas pueden contigo. No sigues reglas, solo la ley del más fuerte. ¡El mundo es tu botín!")
# Función que muestra el menú principal del juego y permite al usuario elegir una opción
def menuJuego():
    print("""
    1 ==> Seguir tus ideales y lanzarte a la aventura
    2 ==> Entrenar
    3 ==> Retirarte
    4 ==> Guardar partida
    5 ==> Salir y guardar
    """)
    return input("Elige una opción: ")  # Retorna la opción elegida por el usuario para su posterior procesamiento

def mostrarEstadisticas():
    # Muestra las estadísticas visuales del personaje con iconos representativos.
    hp_personaje = '❤️ ' * int(personaje["hp"] // 10)
    atq_personaje = '⚔️ ' * int(personaje["atq"] // 5)
    def_personaje = '🛡️ ' * int(personaje["def"] // 5)
    vel_personaje = '👢 ' * int(personaje["vel"] // 5)
    
    print(rf"""--- {personaje['nombre']} ---
Vida:      {hp_personaje}
Ataque:    {atq_personaje}
Defensa:   {def_personaje}
Velocidad: {vel_personaje}
""")

def combate(name, es_boss):
    # Función que maneja el combate contra un enemigo o un jefe.
    # Parámetros:
    # - name (str): Nombre del enemigo o jefe.
    # - es_boss (bool): Indica si el combate es contra un jefe.
    
    # Retorna:
    # - "escapas" si el jugador huye con éxito.
    # - "victoria" si el jugador gana el combate.
    # - "derrota" si el jugador pierde el combate.
    if es_boss:
        # Verificamos si el jefe existe en el diccionario de jefes
        if name not in bosses:
            print("Boss no encontrado.")
            return    
        # Se asignan las estadísticas del jefe
        enemigo = {
            "hp": bosses[name][0],
            "atq": bosses[name][1],
            "def": bosses[name][2],
            "vel": bosses[name][3]
        }
    else:
        # Generación de un enemigo aleatorio basado en las estadísticas del personaje
        enemigo = {
            "hp": random.uniform(personaje["hp"] // 2, personaje["hp"] + 50),
            "atq": random.uniform(personaje["atq"], personaje["atq"] + 5),
            "def": random.uniform(personaje["def"] * 0.5, personaje["def"]),
            "vel": random.uniform(personaje["vel"] * 0.5, personaje["vel"] + 5)
        }
    # Guardamos la vida original del jugador antes del combate
    hp_jug = personaje["hp"]  
    while True:
        # Se muestran las estadísticas del personaje
        mostrarEstadisticas()     
        # Se muestran las estadísticas del enemigo/jefe con iconos representativos
        hp_enemigo = '❤️ ' * int(enemigo["hp"] // 10)
        atq_enemigo = '⚔️ ' * int(enemigo["atq"] // 5)
        def_enemigo = '🛡️ ' * int(enemigo["def"] // 5)
        vel_enemigo = '👢 ' * int(enemigo["vel"] // 5)      
        print(rf"""--- {name} ---
Vida:      {hp_enemigo}
Ataque:    {atq_enemigo}
Defensa:   {def_enemigo}
Velocidad: {vel_enemigo}
""")     
        # Preguntamos al jugador si desea pelear o huir
        op = input("¿Deseas pelear?\n1 ==> Sí\n2 ==> No\n")
        pelear = False
        victoria = False      
        if op == '1':
            pelear = True  # Se inicia el combate
        elif op == '2':
            # Se calcula la posibilidad de escape en función de la velocidad
            if enemigo["vel"] * random.randint(1, 10) < personaje["vel"] * random.randint(1, 10):
                personaje["hp"] = hp_jug  # Se restaura la vida del jugador al huir con éxito
                return "escapas"
            else:
                print("No has conseguido escapar, por lo que te ves obligado a luchar.")
                pelear = True
        else:
            print("Opción no válida")  # Si la opción ingresada no es válida, se vuelve a preguntar en la siguiente iteración       
        if pelear:
            # Se determina quién ataca primero en base a la velocidad
            if personaje["vel"] > enemigo["vel"]:
                # Turno del jugador
                danio_enemigo = max(0, personaje["atq"] - enemigo["def"])
                enemigo["hp"] -= danio_enemigo
                print(f"Has infligido {danio_enemigo:.2f} puntos de daño a {name}.")
                
                if enemigo["hp"] <= 0:
                    victoria = True            
                # Turno del enemigo
                danio_personaje = max(0, enemigo["atq"] - personaje["def"])
                personaje["hp"] -= danio_personaje
                print(f"{name} te ha infligido {danio_personaje:.2f} puntos de daño.")              
                if personaje["hp"] <= 0:
                    return "derrota"
            else:
                # Turno del enemigo primero
                danio_personaje = max(0, enemigo["atq"] - personaje["def"])
                personaje["hp"] -= danio_personaje
                print(f"{name} te ha infligido {danio_personaje:.2f} puntos de daño.")               
                if personaje["hp"] <= 0:
                    return "derrota"              
                # Turno del jugador
                danio_enemigo = max(0, personaje["atq"] - enemigo["def"])
                enemigo["hp"] -= danio_enemigo
                print(f"Has infligido {danio_enemigo:.2f} puntos de daño a {name}.")              
                if enemigo["hp"] <= 0:
                    victoria = True          
            if victoria:
                # Se restaura la vida del jugador y se mejora sus estadísticas tras la victoria
                personaje["hp"] = hp_jug
                personaje["hp"] += enemigo["hp"] * 0.1
                personaje["atq"] += enemigo["atq"] * 0.1
                personaje["def"] += enemigo["def"] * 0.1
                personaje["vel"] += enemigo["vel"] * 0.1
                return "victoria"
   
def mensajeDerrota():
    # Función que muestra un mensaje dependiendo del nivel de fama del personaje al momento de su derrota.
    if personaje["fama"] <= 2:
        # Si la fama es 2 o menor, el personaje es considerado insignificante en la historia.
        print(f"Eres solo un don nadie en este vasto océano... Nadie recordará tu nombre ni recordará tus aventuras. Mueres a la edad de {personaje['edad']} años.")
    elif personaje["fama"] <= 5:
        # Si la fama está entre 3 y 5, el personaje empieza a ser reconocido, pero su muerte no tiene gran impacto.
        print(f"Caes en combate justo cuando tu nombre empezaba a sonar, mueres a la edad de {personaje['edad']} años sin tener un gran peso en la historia.")
    elif personaje["fama"] <= 8:
        # Si la fama está entre 6 y 8, el personaje es conocido pero no llega a la categoría de leyenda.
        print(f"Los rumores sobre tu poder se apagan con esta derrota, todo lo conseguido hasta el momento será recordado como un fracaso. Fuiste un {personaje['ideal']} en ascendencia pero tu llama se apagó antes de convertirte en leyenda, mueres a la edad de {personaje['edad']} años")
    else:
        # Si la fama es mayor a 8, el personaje es una leyenda, pero su muerte le impide completar sus metas.
        print(f"Incluso las leyendas pueden caer... Tus hazañas serán recordadas por años e incluso eres considerado un héroe como {personaje['ideal']}. A pesar de eso no has conseguido completar tus metas, muriendo a la edad de {personaje['edad']} años.")

def muerteVejez():
    # Función que muestra un mensaje dependiendo del nivel de fama del personaje al morir de vejez.
    if personaje["fama"] <= 2:
        # Si la fama es 2 o menor, el personaje ha vivido algunas aventuras pero no deja un gran impacto.
        print(f"Has vivido aventuras y aunque pocas has tenido historias que contar, mueres de vejez a la edad de {personaje['edad']} años.")
    elif personaje["fama"] <= 5:
        # Si la fama está entre 3 y 5, su nombre es conocido pero no deja huella en la historia.
        print(f"Tu nombre ha sonado como una vaga leyenda en los mares, pero el tiempo no perdona. Falleces de vejez a la edad de {personaje['edad']} años sin tener un gran peso en la historia.")
    elif personaje["fama"] <= 8:
        # Si la fama está entre 6 y 8, el personaje será recordado como un guerrero del mar, pero no como una leyenda.
        print(f"Serás recordado como un bravo guerrero del mar que peleó hasta su último aliento, pero tu llama se apagó antes de convertirte en leyenda, mueres de vejez a la edad de {personaje['edad']} años.")
    else:
        # Si la fama es mayor a 8, el personaje es una leyenda cuyo único enemigo fue el tiempo.
        print(f"Las leyendas contarán que alguna vez hubo un {personaje['ideal']} llamado {personaje['nombre']} que jamás conoció derrota, tan sólo a manos del cruel e impasible tiempo, mueres de vejez a la edad de {personaje['edad']} años.")

def retirarse():
    # Función que muestra un mensaje cuando el personaje decide retirarse en lugar de morir en combate o de vejez.
    nhijos = random.randint(0, 5)  # Se genera un número aleatorio de hijos entre 0 y 5.
    edad_muerte = personaje["esperanzaVida"]  # Se obtiene la edad de muerte del personaje.
    # Mensaje base con la edad de muerte y el número de hijos.
    mensaje_base = f"Has vivido {edad_muerte} años y has tenido {nhijos} hijos. "
    if personaje["fama"] <= 2:
        # Si la fama es 2 o menor, su nombre será olvidado con el tiempo.
        mensaje_historia = "Aunque tus aventuras fueron pocas, tu vida tuvo historias que contar. Sin embargo, con el paso del tiempo, tu nombre será olvidado."
    elif personaje["fama"] <= 5:
        # Si la fama está entre 3 y 5, su nombre será recordado vagamente.
        mensaje_historia = "Tu nombre resonó en los mares como una vaga leyenda, pero no dejaste una huella imborrable en la historia."
    elif personaje["fama"] <= 8:
        # Si la fama está entre 6 y 8, será recordado como un guerrero, pero sin alcanzar el nivel de leyenda.
        mensaje_historia = "Serás recordado como un bravo guerrero del mar, un luchador incansable, pero tu legado nunca alcanzó la inmortalidad de las grandes leyendas."
    else:
        # Si la fama es mayor a 8, el personaje será una leyenda para futuras generaciones.
        mensaje_historia = f"Las generaciones futuras hablarán de un {personaje['ideal']} llamado {personaje['nombre']}, un ser cuya grandeza solo fue vencida por el tiempo mismo."
    # Se imprime el mensaje completo.
    print(mensaje_base + mensaje_historia)


def guardarPartida(id):
    # Guarda la partida actual en un archivo JSON. Si no se proporciona un ID, crea una nueva partida.
    global partida  # Se usa la variable global 'partida'.
    try:
        partidas = cargarPartidas()  # Se cargan las partidas guardadas previamente.
        if id is None:  # Si no se proporciona un ID, se crea una nueva partida.
            # Se genera un nuevo ID basado en el mayor ID existente + 1.
            nuevo_id = max([p["id"] for p in partidas], default=0) + 1
            partida = {"id": nuevo_id, "personaje": personaje, "arcos": arcos}  # Se define la estructura de la nueva partida.
            partidas.append(partida)  # Se agrega la nueva partida a la lista.
            print(f"✅ Nueva partida guardada con ID {nuevo_id}.")
        else:  # Si se proporciona un ID, se intenta actualizar la partida existente.
            for partida in partidas:
                if partida["id"] == id:  # Se busca la partida con el ID especificado.
                    partida["personaje"] = personaje  # Se actualizan los datos del personaje.
                    partida["arcos"] = arcos  # Se actualizan los datos de los arcos.
                    print(f"✅ Partida con ID {id} actualizada.")
                    break
            else:  # Si no se encuentra una partida con ese ID, se muestra un mensaje de error.
                print(f"❌ No se encontró una partida con ID {id}.")
        # Se guardan las partidas actualizadas en el archivo JSON.
        with open("OnePieceGame.json", "w") as archivo:
            json.dump(partidas, archivo, indent=4)  # Se usa indent=4 para que el archivo sea más legible.
    except:  # Se captura cualquier error al guardar la partida.
        print("❌ Error al guardar partida")

def cargarPartidas():
    # Carga las partidas guardadas desde un archivo JSON.
    try:
        with open("OnePieceGame.json", "r") as archivo:
            return json.load(archivo)  # Se carga el contenido del archivo JSON y se devuelve como una lista.
    except (FileNotFoundError, json.JSONDecodeError):  
        return []  # Si el archivo no existe o está corrupto, se retorna una lista vacía.

def elegirPartida():
    # Permite al jugador elegir una partida guardada.
    i = 1  # Contador para enumerar las partidas disponibles.
    partidas = cargarPartidas()  # Se cargan las partidas guardadas.
    if len(partidas) == 0:  # Si no hay partidas guardadas, se muestra un mensaje de error.
        print("❌ No hay partidas guardadas.")
        return "null"  # Se retorna "null" para indicar que no hay partidas disponibles.
    else:
        # Se muestran las partidas disponibles con un número para facilitar la selección.
        for partida in partidas:
            print(f"{i} ==> Partida de {partida['personaje']['nombre']}")
            i += 1  
        while True:  # Bucle para asegurar una selección válida.
            try:
                seleccion = int(input("\n🔹 Selecciona una partida (número): ")) - 1  # Se solicita al usuario seleccionar una partida.          
                if 0 <= seleccion < len(partidas):  # Se valida que el número ingresado sea válido.
                    partida_seleccionada = partidas[seleccion]  # Se obtiene la partida seleccionada.
                    print(f"\n✅ Has cargado la partida de {partida_seleccionada['personaje']['nombre']}")
                    return partida_seleccionada  # Se retorna la partida cargada.
                else:
                    print("❌ Número inválido. Intenta de nuevo.")  # Mensaje de error si el número está fuera del rango.
            except ValueError:
                print("❌ Ingresa un número válido.")  # Mensaje de error si el usuario no ingresa un número.

def bucleJuego():
    # Muestra el arte del personaje.
    print(personaje['arte'])
    seguir = True  # Se inicializa la variable que controlará el bucle del juego.
    while seguir:  # El bucle sigue hasta que 'seguir' sea False.
        # Si la edad del personaje supera su esperanza de vida, se ejecuta la función de muerte por vejez.
        if personaje["edad"] > personaje["esperanzaVida"]:
            muerteVejez()
            seguir = False
        else:
            # Se muestra el menú del juego y se guarda la opción seleccionada.
            op = menuJuego()
            # Si la opción seleccionada es "1", se inicia la aventura del personaje.
            if(op == "1"):
                modificar_probabilidades(personaje["nacimiento"])  # Se modifican las probabilidades según el nacimiento del personaje
                # Si el ideal del personaje es "noble", se ejecuta el final correspondiente y termina el bucle.
                if(personaje["ideal"] == "noble"):
                    finalNoble()
                    seguir = False
                else:
                    # Si el personaje aún no tiene un arco, se selecciona uno.
                    if personaje["arco"] == None:
                        arco = selectorDeArco()  # Se selecciona un arco de historia.
                        personaje["arco"] = arco
                    # Si el arco seleccionado no es "victoria", se continua con la aventura.
                    if arco != "victoria":
                        print(f"En tu aventura llegas a las tierras de {arco[0]}, aquí se encuentra un formidable enemigo que derrotar: {arco[1]}")
                        # Se entra en un bucle donde el personaje puede tener diferentes eventos.
                        while seguir:
                            evento = selectorDeEvento()  # Se selecciona un evento para la aventura.
                            if evento == "enemigo":  # Si el evento es un enemigo, se inicia el combate.
                                print(f"En tu travesía por las tierras de {arco[0]} encuentras a un enemigo que te corta el paso")
                                resultado = combate("Enemigo", False)  # Se combate con el enemigo.
                                # Si el resultado es victoria, se aumentan las estadísticas del personaje.
                                if resultado == "victoria":
                                    print("Has conseguido derrotar a tu enemigo, lo que ha aumentado tus estadísticas tras adquirir experiencia en el combate")
                                elif resultado == "derrota":  # Si el resultado es derrota, se ejecuta el mensaje de derrota.
                                    mensajeDerrota()
                                    seguir = False
                                else:
                                    # Si el resultado es escape, se muestra un mensaje adecuado.
                                    print("Esta vez has conseguido escapar, quizás la próxima no tengas tanta suerte.")
                            elif evento == "fruta":  # Si el evento es una fruta, se le ofrece al personaje.
                                fruta = selectorFruta()  # Se selecciona una fruta.
                                while seguir:
                                    op = input("¿Deseas consumir esta fruta?\n1 ==> Si\n2 ==> No\n")  # Se pregunta al usuario si quiere consumirla.   
                                    # Si acepta, se consume la fruta.
                                    if op == '1':
                                        consumirFruta(fruta)
                                        seguir = False  # Se termina el bucle de eventos.
                                    elif op == '2':  # Si no, se descarta la fruta.
                                        descartarFruta(fruta)
                                        seguir = False
                                    else:
                                        print("Opción no válida")  # Si la opción es incorrecta, se vuelve a preguntar.
                                seguir = True  # Se reinicia el bucle para que el personaje continúe.
                            
                            elif evento == "boss":  # Si el evento es un boss, se inicia un combate con el jefe final.
                                resultado = combate(arco[1], True)  # Se combate con el jefe final. 
                                if resultado == "victoria":
                                    # Si se gana el combate, se elimina el arco, se incrementa la fama y la edad del personaje.
                                    arcos.remove(personaje["arco"])
                                    personaje["arco"] = None
                                    personaje["fama"] += 1
                                    print(f"Has conseguido liberar las tierras de {arco[0]} tras derrotar a {arco[1]}m, esta batalla ha conseguido que tu fama aumente a la vez que tu experiencia en combate.")
                                    tiempo = random.randint(1, 10)
                                    personaje["edad"] += tiempo
                                    print(f"Has tardado {tiempo} años en completar esta hazaña, tu edad actual es {personaje['edad']}")
                                    seguir = False  # Se termina el bucle de eventos.
                                elif resultado == "derrota":  # Si se pierde, se ejecuta el mensaje de derrota.
                                    mensajeDerrota()
                                    seguir = False
                                else:  # Si el resultado es escape, se muestra un mensaje adecuado.
                                    print(f"Has conseguido huir, evitando el combate contra {arco[1]}, al menos de momento, tarde o temprano tendrás que regresar a {arco[0]} y terminar este combate")
                                    seguir = False
                        seguir = True  # Se reinicia el bucle de eventos.
                    else:
                        # Si el arco es "victoria", se muestran los diferentes finales según el ideal del personaje.
                        if personaje["ideal"] == "pirata":
                            victoriaPirata()
                        elif personaje["ideal"] == "marine":
                            victoriaMarine()
                        elif personaje["ideal"] == "revolucionario":
                            victoriaRevolucionario()
                        elif personaje["ideal"] == "caballero sagrado":
                            victoriaCaballeroSagrado()
                        elif personaje["ideal"] == "bandido":
                            victoriaBandido()
                        seguir = False  # Se termina el bucle después de mostrar el final.
            # Si la opción seleccionada es "2", se entra en un proceso de entrenamiento.
            elif op == "2":
                # Si las estadísticas del personaje son demasiado altas, no se puede entrenar.
                if personaje["hp"] > 1200 and personaje["atq"] > 120 and personaje["def"] > 120 and personaje["vel"] > 50:
                    print("No puedes entrenar, tus estadísticas son demasiado altas")
                else:
                    tiempo = random.randint(1, 10)  # Se selecciona un tiempo aleatorio de entrenamiento.
                    for i in range(tiempo):
                        # Se aumentan las estadísticas del personaje durante el tiempo de entrenamiento.
                        if personaje["hp"] < 1200:
                            personaje["hp"] += 0.1 * personaje["hp"]
                        if personaje["atq"] < 120:
                            personaje["atq"] += 0.1 * personaje["hp"]
                        if personaje["def"] < 120:
                            personaje["def"] += 0.1 * personaje["hp"]
                        if personaje["vel"] < 50:
                            personaje["vel"] += 0.1 * personaje["hp"]
                    personaje["edad"] += tiempo  # Se aumenta la edad del personaje por el tiempo entrenado.
                    print(f"Has entrenado durante {tiempo} años aumentando tus estadísticas")
                    mostrarEstadisticas()  # Se muestran las estadísticas del personaje después del entrenamiento.
            # Si la opción seleccionada es "3", el personaje decide retirarse.
            elif op == "3":
                retirarse()
                seguir = False  # Se termina el bucle.
            # Si la opción seleccionada es "4" o "5", se guarda la partida.
            elif op == "4":
                guardarPartida(partida["id"])
            elif op == "5":
                guardarPartida(partida["id"])
                partida["id"] = None  # Se reinicia el ID de la partida.
                seguir = False  # Se termina el bucle.


seguir = True  # Se inicializa la variable que controlará el bucle del juego.
dibujoInicio()  # Muestra un dibujo o pantalla de inicio.
# Inicia el bucle del juego que continuará mientras 'seguir' sea True.
while seguir:
    op = elegirOpcion()  # Muestra las opciones disponibles y guarda la opción seleccionada.
    # Si la opción seleccionada es "1", se crea un nuevo personaje.
    if op == "1":
        crearPersonaje()  # Llama a la función para crear un nuevo personaje.
        personaje["ideal"] = ideales()  # Asigna un ideal (como "pirata", "marine", etc.) al personaje.
        # Muestra los detalles iniciales del personaje.
        print(f"Bienvenido {personaje['nombre']} eres un {personaje['raza']} nacido en {personaje['nacimiento']}")
        print("Esto es lo que sabemos de ti hasta el momento")
        infancia()  # Muestra una descripción de la infancia del personaje.
        # Muestra que el personaje inicia su aventura al alcanzar la mayoría de edad.
        print("Hoy es el día en el que inicias tu aventura al haber cumplido la mayoría de edad")
    # Si la opción seleccionada es "2", se carga una partida guardada.
    elif op == "2":
        partidas = cargarPartidas()  # Carga todas las partidas guardadas.
        partida = elegirPartida()  # Llama a la función para elegir una partida guardada.
        # Si no se encuentra una partida, se inicializa una nueva.
        if partida == "null":
            cargada = False  # No se ha cargado una partida.
            partida = {"id":None, "personaje": None, "arcos": None}  # Crea una partida vacía.
        else:
            cargada = True  # Se ha cargado una partida.
            personaje = partida['personaje']  # Asigna el personaje guardado a la variable 'personaje'.
            arcos = partida['arcos']  # Asigna los arcos de la historia guardados.
    # Si la opción seleccionada es "3", el jugador decide salir del juego.
    elif op == "3":
        seguir = False  # Cambia el valor de 'seguir' para salir del bucle.
        mensajeSalida()  # Muestra un mensaje de despedida.
    else:
        print("Opción no válida")  # Si la opción no es válida, se muestra un mensaje de error.
    # Si se ha creado un personaje o se ha cargado una partida, se inicia el bucle del juego.
    if op == "1" or (op == "2" and cargada):
        bucleJuego()  # Inicia el bucle del juego.
